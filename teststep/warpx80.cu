
/*
 * This code was generated by Spiral 8.2.0a03, www.spiral.net
 */

__device__ double P1[5772800];
__device__ double P2[5772800];
__device__ double T128[3148800];
__device__ double T129[3148800];
__device__ double T152[3148800];
__device__ double T153[3148800];
__device__ double T176[3686400];
__device__ double T177[3379200];
__device__ double T207[7372800];
__device__ double T216[7372800];
__device__ double T56[5772800];
__device__ double T57[5772800];
__device__ double T7[6195200];
__device__ double T8[6758400];
__device__ double T80[5772800];
__device__ double T81[5772800];

void init_warpx() {
}

 __constant__ double PhysConst_c = 299792458.;
 __constant__ double PhysConst_ep0 = 8.8541878128e-12;

 __constant__ double D20[160] = {0.012500000000000001, 0.0, 0.012490362953009038, 0.00049074769698835769, 
      0.0124614666716641, 0.00098073869659806188, 0.01241335571193658, 0.0014692174682229707, 
      0.012346104257439223, 0.0019554308130028861, 0.012259816005040381, 0.0024386290252016033, 
      0.012154624004970957, 0.0029180670481988176, 0.012030690455670592, 0.0033930056233134284, 
      0.011888206453689419, 0.0038627124296868424, 0.011727391699031052, 0.004326463213468662, 
      0.011548494156391085, 0.0047835429045636228, 0.011351789672813518, 0.0052332467192178506, 
      0.0111375815523546, 0.0056748812467443347, 0.010906200088409965, 0.0061077655187119365, 
      0.010658002054426154, 0.0065312320589493607, 0.010393370153781816, 0.0069446279127450272, 
      0.010112712429686845, 0.0073473156536559142, 0.0098164616360093132, 0.0077386743663729251, 
      0.0095050745700003877, 0.0081181006041272964, 0.0091790313679460701, 0.0084850093191617716, 
      0.0088388347648318457, 0.0088388347648318457, 0.0084850093191617716, 0.0091790313679460701, 
      0.0081181006041272964, 0.0095050745700003877, 0.0077386743663729251, 0.0098164616360093132, 
      0.0073473156536559142, 0.010112712429686845, 0.0069446279127450272, 0.010393370153781816, 
      0.0065312320589493607, 0.010658002054426154, 0.0061077655187119365, 0.010906200088409965, 
      0.0056748812467443347, 0.0111375815523546, 0.0052332467192178506, 0.011351789672813518, 
      0.0047835429045636228, 0.011548494156391085, 0.004326463213468662, 0.011727391699031052, 
      0.0038627124296868424, 0.011888206453689419, 0.0033930056233134284, 0.012030690455670592, 
      0.0029180670481988176, 0.012154624004970957, 0.0024386290252016033, 0.012259816005040381, 
      0.0019554308130028861, 0.012346104257439223, 0.0014692174682229707, 0.01241335571193658, 
      0.00098073869659806188, 0.0124614666716641, 0.00049074769698835769, 0.012490362953009038, 
      0.0, (-0.012500000000000001), 0.00049074769698835769, (-0.012490362953009038), 
      0.00098073869659806188, (-0.0124614666716641), 0.0014692174682229707, (-0.01241335571193658), 
      0.0019554308130028861, (-0.012346104257439223), 0.0024386290252016033, (-0.012259816005040381), 
      0.0029180670481988176, (-0.012154624004970957), 0.0033930056233134284, (-0.012030690455670592), 
      0.0038627124296868424, (-0.011888206453689419), 0.004326463213468662, (-0.011727391699031052), 
      0.0047835429045636228, (-0.011548494156391085), 0.0052332467192178506, (-0.011351789672813518), 
      0.0056748812467443347, (-0.0111375815523546), 0.0061077655187119365, (-0.010906200088409965), 
      0.0065312320589493607, (-0.010658002054426154), 0.0069446279127450272, (-0.010393370153781816), 
      0.0073473156536559142, (-0.010112712429686845), 0.0077386743663729251, (-0.0098164616360093132), 
      0.0081181006041272964, (-0.0095050745700003877), 0.0084850093191617716, (-0.0091790313679460701), 
      0.0088388347648318457, (-0.0088388347648318457), 0.0091790313679460701, (-0.0084850093191617716), 
      0.0095050745700003877, (-0.0081181006041272964), 0.0098164616360093132, (-0.0077386743663729251), 
      0.010112712429686845, (-0.0073473156536559142), 0.010393370153781816, (-0.0069446279127450272), 
      0.010658002054426154, (-0.0065312320589493607), 0.010906200088409965, (-0.0061077655187119365), 
      0.0111375815523546, (-0.0056748812467443347), 0.011351789672813518, (-0.0052332467192178506), 
      0.011548494156391085, (-0.0047835429045636228), 0.011727391699031052, (-0.004326463213468662), 
      0.011888206453689419, (-0.0038627124296868424), 0.012030690455670592, (-0.0033930056233134284), 
      0.012154624004970957, (-0.0029180670481988176), 0.012259816005040381, (-0.0024386290252016033), 
      0.012346104257439223, (-0.0019554308130028861), 0.01241335571193658, (-0.0014692174682229707), 
      0.0124614666716641, (-0.00098073869659806188), 0.012490362953009038, (-0.00049074769698835769)};

 __constant__ int D23[33] = {81, 81, 80, 81, 
      80, 81, 80, 81, 
      81, 80, 80, 81, 
      80, 81, 80, 81, 
      80, 80, 81, 81, 
      80, 81, 80, 81, 
      80, 81, 81, 81, 
      81, 81, 81, 81, 
      81};

 __constant__ double D39[16] = {1.0, 0.0, 0.80901699437494745, (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), 0.58778525229247314, (-0.80901699437494745), 
      1.0, 0.0, 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), (-0.3090169943749474), (-0.95105651629515353)};

 __constant__ double D38[72] = {1.0, 0.0, 0.98768834059513777, (-0.15643446504023087), 
      0.99691733373312796, (-0.078459095727844944), 0.97236992039767656, (-0.23344536385590539), 
      1.0, 0.0, 0.95105651629515353, (-0.3090169943749474), 
      0.98768834059513777, (-0.15643446504023087), 0.8910065241883679, (-0.45399049973954675), 
      1.0, 0.0, 0.8910065241883679, (-0.45399049973954675), 
      0.97236992039767656, (-0.23344536385590539), 0.76040596560003093, (-0.64944804833018366), 
      1.0, 0.0, 0.80901699437494745, (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), 0.58778525229247314, (-0.80901699437494745), 
      1.0, 0.0, 0.70710678118654757, (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), 0.38268343236508978, (-0.92387953251128674), 
      1.0, 0.0, 0.58778525229247314, (-0.80901699437494745), 
      0.8910065241883679, (-0.45399049973954675), 0.15643446504023087, (-0.98768834059513777), 
      1.0, 0.0, 0.45399049973954675, (-0.8910065241883679), 
      0.85264016435409229, (-0.5224985647159488), (-0.078459095727844944), (-0.99691733373312796), 
      1.0, 0.0, 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), (-0.3090169943749474), (-0.95105651629515353), 
      1.0, 0.0, 0.15643446504023087, (-0.98768834059513777), 
      0.76040596560003093, (-0.64944804833018366), (-0.5224985647159488), (-0.85264016435409229)};

 __constant__ double D21[82] = {0.012500000000000001, 0.0, 0.012490362953009038, 0.00049074769698835769, 
      0.0124614666716641, 0.00098073869659806188, 0.01241335571193658, 0.0014692174682229707, 
      0.012346104257439223, 0.0019554308130028861, 0.012259816005040381, 0.0024386290252016033, 
      0.012154624004970957, 0.0029180670481988176, 0.012030690455670592, 0.0033930056233134284, 
      0.011888206453689419, 0.0038627124296868424, 0.011727391699031052, 0.004326463213468662, 
      0.011548494156391085, 0.0047835429045636228, 0.011351789672813518, 0.0052332467192178506, 
      0.0111375815523546, 0.0056748812467443347, 0.010906200088409965, 0.0061077655187119365, 
      0.010658002054426154, 0.0065312320589493607, 0.010393370153781816, 0.0069446279127450272, 
      0.010112712429686845, 0.0073473156536559142, 0.0098164616360093132, 0.0077386743663729251, 
      0.0095050745700003877, 0.0081181006041272964, 0.0091790313679460701, 0.0084850093191617716, 
      0.0088388347648318457, 0.0088388347648318457, 0.0084850093191617716, 0.0091790313679460701, 
      0.0081181006041272964, 0.0095050745700003877, 0.0077386743663729251, 0.0098164616360093132, 
      0.0073473156536559142, 0.010112712429686845, 0.0069446279127450272, 0.010393370153781816, 
      0.0065312320589493607, 0.010658002054426154, 0.0061077655187119365, 0.010906200088409965, 
      0.0056748812467443347, 0.0111375815523546, 0.0052332467192178506, 0.011351789672813518, 
      0.0047835429045636228, 0.011548494156391085, 0.004326463213468662, 0.011727391699031052, 
      0.0038627124296868424, 0.011888206453689419, 0.0033930056233134284, 0.012030690455670592, 
      0.0029180670481988176, 0.012154624004970957, 0.0024386290252016033, 0.012259816005040381, 
      0.0019554308130028861, 0.012346104257439223, 0.0014692174682229707, 0.01241335571193658, 
      0.00098073869659806188, 0.0124614666716641, 0.00049074769698835769, 0.012490362953009038, 
      0.0, 0.012500000000000001};

 __device__ double D37[32] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.95105651629515353, (-0.3090169943749474), 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), 0.58778525229247314, (-0.80901699437494745), 
      0.80901699437494745, (-0.58778525229247314), (-0.80901699437494745), (-0.58778525229247314), 
      0.3090169943749474, (-0.95105651629515353), (-0.3090169943749474), (-0.95105651629515353), 
      0.58778525229247314, (-0.80901699437494745), (-0.80901699437494745), 0.58778525229247314, 
      (-0.3090169943749474), (-0.95105651629515353), (-0.95105651629515353), (-0.3090169943749474)};

 __device__ double D35[160] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 0.70710678118654757, (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), 0.38268343236508978, (-0.92387953251128674), 
      0.99691733373312796, (-0.078459095727844944), 0.64944804833018366, (-0.76040596560003093), 
      0.8910065241883679, (-0.45399049973954675), 0.3090169943749474, (-0.95105651629515353), 
      0.98768834059513777, (-0.15643446504023087), 0.58778525229247314, (-0.80901699437494745), 
      0.85264016435409229, (-0.5224985647159488), 0.23344536385590539, (-0.97236992039767656), 
      0.97236992039767656, (-0.23344536385590539), 0.5224985647159488, (-0.85264016435409229), 
      0.80901699437494745, (-0.58778525229247314), 0.15643446504023087, (-0.98768834059513777), 
      0.95105651629515353, (-0.3090169943749474), 0.45399049973954675, (-0.8910065241883679), 
      0.76040596560003093, (-0.64944804833018366), 0.078459095727844944, (-0.99691733373312796), 
      1.0, 0.0, 0.0, (-1.0), 
      0.70710678118654757, (-0.70710678118654757), (-0.70710678118654757), (-0.70710678118654757), 
      0.98768834059513777, (-0.15643446504023087), (-0.15643446504023087), (-0.98768834059513777), 
      0.58778525229247314, (-0.80901699437494745), (-0.80901699437494745), (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), (-0.3090169943749474), (-0.95105651629515353), 
      0.45399049973954675, (-0.8910065241883679), (-0.8910065241883679), (-0.45399049973954675), 
      0.8910065241883679, (-0.45399049973954675), (-0.45399049973954675), (-0.8910065241883679), 
      0.3090169943749474, (-0.95105651629515353), (-0.95105651629515353), (-0.3090169943749474), 
      0.80901699437494745, (-0.58778525229247314), (-0.58778525229247314), (-0.80901699437494745), 
      0.15643446504023087, (-0.98768834059513777), (-0.98768834059513777), (-0.15643446504023087), 
      1.0, 0.0, (-0.70710678118654757), (-0.70710678118654757), 
      0.38268343236508978, (-0.92387953251128674), (-0.92387953251128674), 0.38268343236508978, 
      0.97236992039767656, (-0.23344536385590539), (-0.85264016435409229), (-0.5224985647159488), 
      0.15643446504023087, (-0.98768834059513777), (-0.80901699437494745), 0.58778525229247314, 
      0.8910065241883679, (-0.45399049973954675), (-0.95105651629515353), (-0.3090169943749474), 
      (-0.078459095727844944), (-0.99691733373312796), (-0.64944804833018366), 0.76040596560003093, 
      0.76040596560003093, (-0.64944804833018366), (-0.99691733373312796), (-0.078459095727844944), 
      (-0.3090169943749474), (-0.95105651629515353), (-0.45399049973954675), 0.8910065241883679, 
      0.58778525229247314, (-0.80901699437494745), (-0.98768834059513777), 0.15643446504023087, 
      (-0.5224985647159488), (-0.85264016435409229), (-0.23344536385590539), 0.97236992039767656};

 __constant__ double D18[160] = {0.012500000000000001, 0.0, 0.012490362953009038, 0.00049074769698835769, 
      0.0124614666716641, 0.00098073869659806188, 0.01241335571193658, 0.0014692174682229707, 
      0.012346104257439223, 0.0019554308130028861, 0.012259816005040381, 0.0024386290252016033, 
      0.012154624004970957, 0.0029180670481988176, 0.012030690455670592, 0.0033930056233134284, 
      0.011888206453689419, 0.0038627124296868424, 0.011727391699031052, 0.004326463213468662, 
      0.011548494156391085, 0.0047835429045636228, 0.011351789672813518, 0.0052332467192178506, 
      0.0111375815523546, 0.0056748812467443347, 0.010906200088409965, 0.0061077655187119365, 
      0.010658002054426154, 0.0065312320589493607, 0.010393370153781816, 0.0069446279127450272, 
      0.010112712429686845, 0.0073473156536559142, 0.0098164616360093132, 0.0077386743663729251, 
      0.0095050745700003877, 0.0081181006041272964, 0.0091790313679460701, 0.0084850093191617716, 
      0.0088388347648318457, 0.0088388347648318457, 0.0084850093191617716, 0.0091790313679460701, 
      0.0081181006041272964, 0.0095050745700003877, 0.0077386743663729251, 0.0098164616360093132, 
      0.0073473156536559142, 0.010112712429686845, 0.0069446279127450272, 0.010393370153781816, 
      0.0065312320589493607, 0.010658002054426154, 0.0061077655187119365, 0.010906200088409965, 
      0.0056748812467443347, 0.0111375815523546, 0.0052332467192178506, 0.011351789672813518, 
      0.0047835429045636228, 0.011548494156391085, 0.004326463213468662, 0.011727391699031052, 
      0.0038627124296868424, 0.011888206453689419, 0.0033930056233134284, 0.012030690455670592, 
      0.0029180670481988176, 0.012154624004970957, 0.0024386290252016033, 0.012259816005040381, 
      0.0019554308130028861, 0.012346104257439223, 0.0014692174682229707, 0.01241335571193658, 
      0.00098073869659806188, 0.0124614666716641, 0.00049074769698835769, 0.012490362953009038, 
      0.0, (-0.012500000000000001), 0.00049074769698835769, (-0.012490362953009038), 
      0.00098073869659806188, (-0.0124614666716641), 0.0014692174682229707, (-0.01241335571193658), 
      0.0019554308130028861, (-0.012346104257439223), 0.0024386290252016033, (-0.012259816005040381), 
      0.0029180670481988176, (-0.012154624004970957), 0.0033930056233134284, (-0.012030690455670592), 
      0.0038627124296868424, (-0.011888206453689419), 0.004326463213468662, (-0.011727391699031052), 
      0.0047835429045636228, (-0.011548494156391085), 0.0052332467192178506, (-0.011351789672813518), 
      0.0056748812467443347, (-0.0111375815523546), 0.0061077655187119365, (-0.010906200088409965), 
      0.0065312320589493607, (-0.010658002054426154), 0.0069446279127450272, (-0.010393370153781816), 
      0.0073473156536559142, (-0.010112712429686845), 0.0077386743663729251, (-0.0098164616360093132), 
      0.0081181006041272964, (-0.0095050745700003877), 0.0084850093191617716, (-0.0091790313679460701), 
      0.0088388347648318457, (-0.0088388347648318457), 0.0091790313679460701, (-0.0084850093191617716), 
      0.0095050745700003877, (-0.0081181006041272964), 0.0098164616360093132, (-0.0077386743663729251), 
      0.010112712429686845, (-0.0073473156536559142), 0.010393370153781816, (-0.0069446279127450272), 
      0.010658002054426154, (-0.0065312320589493607), 0.010906200088409965, (-0.0061077655187119365), 
      0.0111375815523546, (-0.0056748812467443347), 0.011351789672813518, (-0.0052332467192178506), 
      0.011548494156391085, (-0.0047835429045636228), 0.011727391699031052, (-0.004326463213468662), 
      0.011888206453689419, (-0.0038627124296868424), 0.012030690455670592, (-0.0033930056233134284), 
      0.012154624004970957, (-0.0029180670481988176), 0.012259816005040381, (-0.0024386290252016033), 
      0.012346104257439223, (-0.0019554308130028861), 0.01241335571193658, (-0.0014692174682229707), 
      0.0124614666716641, (-0.00098073869659806188), 0.012490362953009038, (-0.00049074769698835769)};

 __device__ double D34[32] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      0.95105651629515353, (-0.3090169943749474), 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), 0.58778525229247314, (-0.80901699437494745), 
      0.80901699437494745, (-0.58778525229247314), (-0.80901699437494745), (-0.58778525229247314), 
      0.3090169943749474, (-0.95105651629515353), (-0.3090169943749474), (-0.95105651629515353), 
      0.58778525229247314, (-0.80901699437494745), (-0.80901699437494745), 0.58778525229247314, 
      (-0.3090169943749474), (-0.95105651629515353), (-0.95105651629515353), (-0.3090169943749474)};

 __device__ double D32[160] = {1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 1.0, 0.0, 
      1.0, 0.0, 0.70710678118654757, (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), 0.38268343236508978, (-0.92387953251128674), 
      0.99691733373312796, (-0.078459095727844944), 0.64944804833018366, (-0.76040596560003093), 
      0.8910065241883679, (-0.45399049973954675), 0.3090169943749474, (-0.95105651629515353), 
      0.98768834059513777, (-0.15643446504023087), 0.58778525229247314, (-0.80901699437494745), 
      0.85264016435409229, (-0.5224985647159488), 0.23344536385590539, (-0.97236992039767656), 
      0.97236992039767656, (-0.23344536385590539), 0.5224985647159488, (-0.85264016435409229), 
      0.80901699437494745, (-0.58778525229247314), 0.15643446504023087, (-0.98768834059513777), 
      0.95105651629515353, (-0.3090169943749474), 0.45399049973954675, (-0.8910065241883679), 
      0.76040596560003093, (-0.64944804833018366), 0.078459095727844944, (-0.99691733373312796), 
      1.0, 0.0, 0.0, (-1.0), 
      0.70710678118654757, (-0.70710678118654757), (-0.70710678118654757), (-0.70710678118654757), 
      0.98768834059513777, (-0.15643446504023087), (-0.15643446504023087), (-0.98768834059513777), 
      0.58778525229247314, (-0.80901699437494745), (-0.80901699437494745), (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), (-0.3090169943749474), (-0.95105651629515353), 
      0.45399049973954675, (-0.8910065241883679), (-0.8910065241883679), (-0.45399049973954675), 
      0.8910065241883679, (-0.45399049973954675), (-0.45399049973954675), (-0.8910065241883679), 
      0.3090169943749474, (-0.95105651629515353), (-0.95105651629515353), (-0.3090169943749474), 
      0.80901699437494745, (-0.58778525229247314), (-0.58778525229247314), (-0.80901699437494745), 
      0.15643446504023087, (-0.98768834059513777), (-0.98768834059513777), (-0.15643446504023087), 
      1.0, 0.0, (-0.70710678118654757), (-0.70710678118654757), 
      0.38268343236508978, (-0.92387953251128674), (-0.92387953251128674), 0.38268343236508978, 
      0.97236992039767656, (-0.23344536385590539), (-0.85264016435409229), (-0.5224985647159488), 
      0.15643446504023087, (-0.98768834059513777), (-0.80901699437494745), 0.58778525229247314, 
      0.8910065241883679, (-0.45399049973954675), (-0.95105651629515353), (-0.3090169943749474), 
      (-0.078459095727844944), (-0.99691733373312796), (-0.64944804833018366), 0.76040596560003093, 
      0.76040596560003093, (-0.64944804833018366), (-0.99691733373312796), (-0.078459095727844944), 
      (-0.3090169943749474), (-0.95105651629515353), (-0.45399049973954675), 0.8910065241883679, 
      0.58778525229247314, (-0.80901699437494745), (-0.98768834059513777), 0.15643446504023087, 
      (-0.5224985647159488), (-0.85264016435409229), (-0.23344536385590539), 0.97236992039767656};

 __constant__ double D13[82] = {0.012500000000000001, 0.0, 0.012490362953009038, 0.00049074769698835769, 
      0.0124614666716641, 0.00098073869659806188, 0.01241335571193658, 0.0014692174682229707, 
      0.012346104257439223, 0.0019554308130028861, 0.012259816005040381, 0.0024386290252016033, 
      0.012154624004970957, 0.0029180670481988176, 0.012030690455670592, 0.0033930056233134284, 
      0.011888206453689419, 0.0038627124296868424, 0.011727391699031052, 0.004326463213468662, 
      0.011548494156391085, 0.0047835429045636228, 0.011351789672813518, 0.0052332467192178506, 
      0.0111375815523546, 0.0056748812467443347, 0.010906200088409965, 0.0061077655187119365, 
      0.010658002054426154, 0.0065312320589493607, 0.010393370153781816, 0.0069446279127450272, 
      0.010112712429686845, 0.0073473156536559142, 0.0098164616360093132, 0.0077386743663729251, 
      0.0095050745700003877, 0.0081181006041272964, 0.0091790313679460701, 0.0084850093191617716, 
      0.0088388347648318457, 0.0088388347648318457, 0.0084850093191617716, 0.0091790313679460701, 
      0.0081181006041272964, 0.0095050745700003877, 0.0077386743663729251, 0.0098164616360093132, 
      0.0073473156536559142, 0.010112712429686845, 0.0069446279127450272, 0.010393370153781816, 
      0.0065312320589493607, 0.010658002054426154, 0.0061077655187119365, 0.010906200088409965, 
      0.0056748812467443347, 0.0111375815523546, 0.0052332467192178506, 0.011351789672813518, 
      0.0047835429045636228, 0.011548494156391085, 0.004326463213468662, 0.011727391699031052, 
      0.0038627124296868424, 0.011888206453689419, 0.0033930056233134284, 0.012030690455670592, 
      0.0029180670481988176, 0.012154624004970957, 0.0024386290252016033, 0.012259816005040381, 
      0.0019554308130028861, 0.012346104257439223, 0.0014692174682229707, 0.01241335571193658, 
      0.00098073869659806188, 0.0124614666716641, 0.00049074769698835769, 0.012490362953009038, 
      0.0, 0.012500000000000001};

 __constant__ double D12[160] = {0.012500000000000001, 0.0, 0.012490362953009038, (-0.00049074769698835769), 
      0.0124614666716641, (-0.00098073869659806188), 0.01241335571193658, (-0.0014692174682229707), 
      0.012346104257439223, (-0.0019554308130028861), 0.012259816005040381, (-0.0024386290252016033), 
      0.012154624004970957, (-0.0029180670481988176), 0.012030690455670592, (-0.0033930056233134284), 
      0.011888206453689419, (-0.0038627124296868424), 0.011727391699031052, (-0.004326463213468662), 
      0.011548494156391085, (-0.0047835429045636228), 0.011351789672813518, (-0.0052332467192178506), 
      0.0111375815523546, (-0.0056748812467443347), 0.010906200088409965, (-0.0061077655187119365), 
      0.010658002054426154, (-0.0065312320589493607), 0.010393370153781816, (-0.0069446279127450272), 
      0.010112712429686845, (-0.0073473156536559142), 0.0098164616360093132, (-0.0077386743663729251), 
      0.0095050745700003877, (-0.0081181006041272964), 0.0091790313679460701, (-0.0084850093191617716), 
      0.0088388347648318457, (-0.0088388347648318457), 0.0084850093191617716, (-0.0091790313679460701), 
      0.0081181006041272964, (-0.0095050745700003877), 0.0077386743663729251, (-0.0098164616360093132), 
      0.0073473156536559142, (-0.010112712429686845), 0.0069446279127450272, (-0.010393370153781816), 
      0.0065312320589493607, (-0.010658002054426154), 0.0061077655187119365, (-0.010906200088409965), 
      0.0056748812467443347, (-0.0111375815523546), 0.0052332467192178506, (-0.011351789672813518), 
      0.0047835429045636228, (-0.011548494156391085), 0.004326463213468662, (-0.011727391699031052), 
      0.0038627124296868424, (-0.011888206453689419), 0.0033930056233134284, (-0.012030690455670592), 
      0.0029180670481988176, (-0.012154624004970957), 0.0024386290252016033, (-0.012259816005040381), 
      0.0019554308130028861, (-0.012346104257439223), 0.0014692174682229707, (-0.01241335571193658), 
      0.00098073869659806188, (-0.0124614666716641), 0.00049074769698835769, (-0.012490362953009038), 
      0.0, 0.012500000000000001, 0.00049074769698835769, 0.012490362953009038, 
      0.00098073869659806188, 0.0124614666716641, 0.0014692174682229707, 0.01241335571193658, 
      0.0019554308130028861, 0.012346104257439223, 0.0024386290252016033, 0.012259816005040381, 
      0.0029180670481988176, 0.012154624004970957, 0.0033930056233134284, 0.012030690455670592, 
      0.0038627124296868424, 0.011888206453689419, 0.004326463213468662, 0.011727391699031052, 
      0.0047835429045636228, 0.011548494156391085, 0.0052332467192178506, 0.011351789672813518, 
      0.0056748812467443347, 0.0111375815523546, 0.0061077655187119365, 0.010906200088409965, 
      0.0065312320589493607, 0.010658002054426154, 0.0069446279127450272, 0.010393370153781816, 
      0.0073473156536559142, 0.010112712429686845, 0.0077386743663729251, 0.0098164616360093132, 
      0.0081181006041272964, 0.0095050745700003877, 0.0084850093191617716, 0.0091790313679460701, 
      0.0088388347648318457, 0.0088388347648318457, 0.0091790313679460701, 0.0084850093191617716, 
      0.0095050745700003877, 0.0081181006041272964, 0.0098164616360093132, 0.0077386743663729251, 
      0.010112712429686845, 0.0073473156536559142, 0.010393370153781816, 0.0069446279127450272, 
      0.010658002054426154, 0.0065312320589493607, 0.010906200088409965, 0.0061077655187119365, 
      0.0111375815523546, 0.0056748812467443347, 0.011351789672813518, 0.0052332467192178506, 
      0.011548494156391085, 0.0047835429045636228, 0.011727391699031052, 0.004326463213468662, 
      0.011888206453689419, 0.0038627124296868424, 0.012030690455670592, 0.0033930056233134284, 
      0.012154624004970957, 0.0029180670481988176, 0.012259816005040381, 0.0024386290252016033, 
      0.012346104257439223, 0.0019554308130028861, 0.01241335571193658, 0.0014692174682229707, 
      0.0124614666716641, 0.00098073869659806188, 0.012490362953009038, 0.00049074769698835769};

 __constant__ double D25[72] = {1.0, 0.0, 0.98768834059513777, (-0.15643446504023087), 
      0.99691733373312796, (-0.078459095727844944), 0.97236992039767656, (-0.23344536385590539), 
      1.0, 0.0, 0.95105651629515353, (-0.3090169943749474), 
      0.98768834059513777, (-0.15643446504023087), 0.8910065241883679, (-0.45399049973954675), 
      1.0, 0.0, 0.8910065241883679, (-0.45399049973954675), 
      0.97236992039767656, (-0.23344536385590539), 0.76040596560003093, (-0.64944804833018366), 
      1.0, 0.0, 0.80901699437494745, (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), 0.58778525229247314, (-0.80901699437494745), 
      1.0, 0.0, 0.70710678118654757, (-0.70710678118654757), 
      0.92387953251128674, (-0.38268343236508978), 0.38268343236508978, (-0.92387953251128674), 
      1.0, 0.0, 0.58778525229247314, (-0.80901699437494745), 
      0.8910065241883679, (-0.45399049973954675), 0.15643446504023087, (-0.98768834059513777), 
      1.0, 0.0, 0.45399049973954675, (-0.8910065241883679), 
      0.85264016435409229, (-0.5224985647159488), (-0.078459095727844944), (-0.99691733373312796), 
      1.0, 0.0, 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), (-0.3090169943749474), (-0.95105651629515353), 
      1.0, 0.0, 0.15643446504023087, (-0.98768834059513777), 
      0.76040596560003093, (-0.64944804833018366), (-0.5224985647159488), (-0.85264016435409229)};

 __constant__ double D24[16] = {1.0, 0.0, 0.80901699437494745, (-0.58778525229247314), 
      0.95105651629515353, (-0.3090169943749474), 0.58778525229247314, (-0.80901699437494745), 
      1.0, 0.0, 0.3090169943749474, (-0.95105651629515353), 
      0.80901699437494745, (-0.58778525229247314), (-0.3090169943749474), (-0.95105651629515353)};

 __constant__ double D10[82] = {0.012500000000000001, 0.0, 0.012490362953009038, (-0.00049074769698835769), 
      0.0124614666716641, (-0.00098073869659806188), 0.01241335571193658, (-0.0014692174682229707), 
      0.012346104257439223, (-0.0019554308130028861), 0.012259816005040381, (-0.0024386290252016033), 
      0.012154624004970957, (-0.0029180670481988176), 0.012030690455670592, (-0.0033930056233134284), 
      0.011888206453689419, (-0.0038627124296868424), 0.011727391699031052, (-0.004326463213468662), 
      0.011548494156391085, (-0.0047835429045636228), 0.011351789672813518, (-0.0052332467192178506), 
      0.0111375815523546, (-0.0056748812467443347), 0.010906200088409965, (-0.0061077655187119365), 
      0.010658002054426154, (-0.0065312320589493607), 0.010393370153781816, (-0.0069446279127450272), 
      0.010112712429686845, (-0.0073473156536559142), 0.0098164616360093132, (-0.0077386743663729251), 
      0.0095050745700003877, (-0.0081181006041272964), 0.0091790313679460701, (-0.0084850093191617716), 
      0.0088388347648318457, (-0.0088388347648318457), 0.0084850093191617716, (-0.0091790313679460701), 
      0.0081181006041272964, (-0.0095050745700003877), 0.0077386743663729251, (-0.0098164616360093132), 
      0.0073473156536559142, (-0.010112712429686845), 0.0069446279127450272, (-0.010393370153781816), 
      0.0065312320589493607, (-0.010658002054426154), 0.0061077655187119365, (-0.010906200088409965), 
      0.0056748812467443347, (-0.0111375815523546), 0.0052332467192178506, (-0.011351789672813518), 
      0.0047835429045636228, (-0.011548494156391085), 0.004326463213468662, (-0.011727391699031052), 
      0.0038627124296868424, (-0.011888206453689419), 0.0033930056233134284, (-0.012030690455670592), 
      0.0029180670481988176, (-0.012154624004970957), 0.0024386290252016033, (-0.012259816005040381), 
      0.0019554308130028861, (-0.012346104257439223), 0.0014692174682229707, (-0.01241335571193658), 
      0.00098073869659806188, (-0.0124614666716641), 0.00049074769698835769, (-0.012490362953009038), 
      0.0, (-0.012500000000000001)};

 __constant__ double D6[160] = {0.012500000000000001, 0.0, 0.012490362953009038, (-0.00049074769698835769), 
      0.0124614666716641, (-0.00098073869659806188), 0.01241335571193658, (-0.0014692174682229707), 
      0.012346104257439223, (-0.0019554308130028861), 0.012259816005040381, (-0.0024386290252016033), 
      0.012154624004970957, (-0.0029180670481988176), 0.012030690455670592, (-0.0033930056233134284), 
      0.011888206453689419, (-0.0038627124296868424), 0.011727391699031052, (-0.004326463213468662), 
      0.011548494156391085, (-0.0047835429045636228), 0.011351789672813518, (-0.0052332467192178506), 
      0.0111375815523546, (-0.0056748812467443347), 0.010906200088409965, (-0.0061077655187119365), 
      0.010658002054426154, (-0.0065312320589493607), 0.010393370153781816, (-0.0069446279127450272), 
      0.010112712429686845, (-0.0073473156536559142), 0.0098164616360093132, (-0.0077386743663729251), 
      0.0095050745700003877, (-0.0081181006041272964), 0.0091790313679460701, (-0.0084850093191617716), 
      0.0088388347648318457, (-0.0088388347648318457), 0.0084850093191617716, (-0.0091790313679460701), 
      0.0081181006041272964, (-0.0095050745700003877), 0.0077386743663729251, (-0.0098164616360093132), 
      0.0073473156536559142, (-0.010112712429686845), 0.0069446279127450272, (-0.010393370153781816), 
      0.0065312320589493607, (-0.010658002054426154), 0.0061077655187119365, (-0.010906200088409965), 
      0.0056748812467443347, (-0.0111375815523546), 0.0052332467192178506, (-0.011351789672813518), 
      0.0047835429045636228, (-0.011548494156391085), 0.004326463213468662, (-0.011727391699031052), 
      0.0038627124296868424, (-0.011888206453689419), 0.0033930056233134284, (-0.012030690455670592), 
      0.0029180670481988176, (-0.012154624004970957), 0.0024386290252016033, (-0.012259816005040381), 
      0.0019554308130028861, (-0.012346104257439223), 0.0014692174682229707, (-0.01241335571193658), 
      0.00098073869659806188, (-0.0124614666716641), 0.00049074769698835769, (-0.012490362953009038), 
      0.0, 0.012500000000000001, 0.00049074769698835769, 0.012490362953009038, 
      0.00098073869659806188, 0.0124614666716641, 0.0014692174682229707, 0.01241335571193658, 
      0.0019554308130028861, 0.012346104257439223, 0.0024386290252016033, 0.012259816005040381, 
      0.0029180670481988176, 0.012154624004970957, 0.0033930056233134284, 0.012030690455670592, 
      0.0038627124296868424, 0.011888206453689419, 0.004326463213468662, 0.011727391699031052, 
      0.0047835429045636228, 0.011548494156391085, 0.0052332467192178506, 0.011351789672813518, 
      0.0056748812467443347, 0.0111375815523546, 0.0061077655187119365, 0.010906200088409965, 
      0.0065312320589493607, 0.010658002054426154, 0.0069446279127450272, 0.010393370153781816, 
      0.0073473156536559142, 0.010112712429686845, 0.0077386743663729251, 0.0098164616360093132, 
      0.0081181006041272964, 0.0095050745700003877, 0.0084850093191617716, 0.0091790313679460701, 
      0.0088388347648318457, 0.0088388347648318457, 0.0091790313679460701, 0.0084850093191617716, 
      0.0095050745700003877, 0.0081181006041272964, 0.0098164616360093132, 0.0077386743663729251, 
      0.010112712429686845, 0.0073473156536559142, 0.010393370153781816, 0.0069446279127450272, 
      0.010658002054426154, 0.0065312320589493607, 0.010906200088409965, 0.0061077655187119365, 
      0.0111375815523546, 0.0056748812467443347, 0.011351789672813518, 0.0052332467192178506, 
      0.011548494156391085, 0.0047835429045636228, 0.011727391699031052, 0.004326463213468662, 
      0.011888206453689419, 0.0038627124296868424, 0.012030690455670592, 0.0033930056233134284, 
      0.012154624004970957, 0.0029180670481988176, 0.012259816005040381, 0.0024386290252016033, 
      0.012346104257439223, 0.0019554308130028861, 0.01241335571193658, 0.0014692174682229707, 
      0.0124614666716641, 0.00098073869659806188, 0.012490362953009038, 0.00049074769698835769};


__global__ void ker_code0(double  * *Xptr) {
    double s26, s27, s28, s29, s30, t289, t290, t291, 
            t292;
    int a156, a157, a158, a159;
    double  *a155;
    a155 = Xptr[blockIdx.y];
    a156 = (3*blockIdx.y);
    a157 = D23[(a156 + 2)];
    a158 = (threadIdx.y + (4*threadIdx.x) + ((D23[(a156 + 1)]*a157)*blockIdx.x) + (40*(a157*blockIdx.z)) + (a157*threadIdx.z));
    s26 = a155[a158];
    s27 = a155[(a158 + 16)];
    s28 = a155[(a158 + 64)];
    t289 = (s27 + s28);
    t290 = (s27 - s28);
    s29 = a155[(a158 + 48)];
    s30 = a155[(a158 + 32)];
    t291 = (s29 + s30);
    t292 = (s29 - s30);
    a159 = ((24*threadIdx.y) + (6*threadIdx.x));
    T8[((((a159 + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = (t289 + t291 + s26);
    T8[(((((a159 + 1) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = 0.0;
    T8[(((((a159 + 2) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = (((0.3090169943749474*t289) - (0.80901699437494745*t291)) + s26);
    T8[(((((a159 + 4) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = (((0.3090169943749474*t291) - (0.80901699437494745*t289)) + s26);
    T8[(((((a159 + 3) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = ((0.58778525229247314*t292) - (0.95105651629515353*t290));
    T8[(((((a159 + 5) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))] = -(((0.58778525229247314*t290) + (0.95105651629515353*t292)));
    __syncthreads();
    if( threadIdx.x <= 1 ) {
        if (((threadIdx.x == 0))) {
            double s57, s58, s59, s60, s61, s62;
            int a190, a191;
            a190 = (24*threadIdx.y);
            s57 = T8[((((a190 + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
            s58 = T8[(((((a190 + 12) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
            s59 = (s57 + s58);
            s60 = T8[(((((a190 + 6) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
            s61 = T8[(((((a190 + 18) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
            s62 = (s60 + s61);
            a191 = (22*threadIdx.y);
            T7[((((a191 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (s59 + s62);
            T7[(((((a191 + 1) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = 0.0;
            T7[(((((a191 + 20) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (s59 - s62);
            T7[(((((a191 + 21) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = 0.0;
            T7[(((((a191 + 10) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (s57 - s58);
            T7[(((((a191 + 11) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (s61 - s60);
        }
        if (((threadIdx.x == 1))) {
            for(int i281 = 0; i281 <= 1; i281++) {
                double a371, a372, a373, a374, a375, a376, a377, a378, 
                        s111, s112, s113, s114, s115, s116, s117, s118, 
                        s119, s120, s121, s122, s123, s124, s125, s126, 
                        t333, t334, t335, t336, t337, t338, t339, t340;
                int a369, a370, a379, b68, b69, b70;
                a369 = (2*i281);
                b68 = ((24*threadIdx.y) + a369);
                s111 = T8[(((((b68 + 2) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s112 = T8[(((((b68 + 3) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s113 = T8[(((((b68 + 14) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s114 = T8[(((((b68 + 15) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                a370 = (8*i281);
                a371 = D39[a370];
                a372 = D39[(a370 + 1)];
                s115 = ((a371*s111) - (a372*s112));
                s116 = ((a372*s111) + (a371*s112));
                a373 = D39[(a370 + 2)];
                a374 = D39[(a370 + 3)];
                s117 = ((a373*s113) - (a374*s114));
                s118 = ((a374*s113) + (a373*s114));
                t333 = (s115 + s117);
                t334 = (s116 + s118);
                t335 = (s115 - s117);
                t336 = (s116 - s118);
                s119 = T8[(((((b68 + 8) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s120 = T8[(((((b68 + 9) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s121 = T8[(((((b68 + 20) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                s122 = T8[(((((b68 + 21) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (3379200*blockIdx.z))];
                a375 = D39[(a370 + 4)];
                a376 = D39[(a370 + 5)];
                s123 = ((a375*s119) - (a376*s120));
                s124 = ((a376*s119) + (a375*s120));
                a377 = D39[(a370 + 6)];
                a378 = D39[(a370 + 7)];
                s125 = ((a377*s121) - (a378*s122));
                s126 = ((a378*s121) + (a377*s122));
                t337 = (s123 + s125);
                t338 = (s124 + s126);
                t339 = (s123 - s125);
                t340 = (s124 - s126);
                a379 = (22*threadIdx.y);
                b69 = (a379 + a369);
                T7[(((((b69 + 2) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t333 + t337);
                T7[(((((b69 + 3) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t334 + t338);
                b70 = (a379 - a369);
                T7[(((((b70 + 18) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t333 - t337);
                T7[(((((b70 + 19) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t338 - t334);
                T7[(((((b69 + 12) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t335 + t340);
                T7[(((((b69 + 13) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t336 - t339);
                T7[(((((b70 + 8) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = (t335 - t340);
                T7[(((((b70 + 9) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] = -((t336 + t339));
            }
        }
    }
    __syncthreads();
    if( threadIdx.y <= 2 ) {
        if( threadIdx.x <= 0 ) {
            if (((threadIdx.y == 0))) {
                double s141, s142;
                int a430;
                s141 = (T7[((((88*threadIdx.z) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] + T7[((((44 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
                s142 = (T7[((((22 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] + T7[((((66 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
                a430 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                P1[a430] = (s141 + s142);
                P1[(a430 + 1)] = 0.0;
                P1[(a430 + 80)] = (s141 - s142);
                P1[(a430 + 81)] = 0.0;
                P1[(a430 + 40)] = (T7[((((88*threadIdx.z) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] - T7[((((44 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
                P1[(a430 + 41)] = (T7[((((66 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] - T7[((((22 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
            }
            if (((threadIdx.y == 1))) {
                for(int i255 = 0; i255 <= 8; i255++) {
                    double a627, a628, a629, a630, a631, a632, a633, a634, 
                            s191, s192, s193, s194, s195, s196, s197, s198, 
                            s199, s200, s201, s202, s203, s204, s205, s206, 
                            t381, t382, t383, t384, t385, t387, t388, t389;
                    int a625, a626, b130, b131, b132;
                    a625 = (2*i255);
                    s191 = T7[(((((a625 + 2) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s192 = T7[(((((a625 + 3) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s193 = T7[(((((a625 + 46) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s194 = T7[(((((a625 + 47) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    a626 = (8*i255);
                    a627 = D38[a626];
                    a628 = D38[(a626 + 1)];
                    s195 = ((a627*s191) - (a628*s192));
                    s196 = ((a628*s191) + (a627*s192));
                    a629 = D38[(a626 + 2)];
                    a630 = D38[(a626 + 3)];
                    s197 = ((a629*s193) - (a630*s194));
                    s198 = ((a630*s193) + (a629*s194));
                    t381 = (s195 + s197);
                    t382 = (s196 + s198);
                    t383 = (s195 - s197);
                    t384 = (s196 - s198);
                    s199 = T7[(((((a625 + 24) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s200 = T7[(((((a625 + 25) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s201 = T7[(((((a625 + 68) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    s202 = T7[(((((a625 + 69) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))];
                    a631 = D38[(a626 + 4)];
                    a632 = D38[(a626 + 5)];
                    s203 = ((a631*s199) - (a632*s200));
                    s204 = ((a632*s199) + (a631*s200));
                    a633 = D38[(a626 + 6)];
                    a634 = D38[(a626 + 7)];
                    s205 = ((a633*s201) - (a634*s202));
                    s206 = ((a634*s201) + (a633*s202));
                    t385 = (s203 + s205);
                    t387 = (s204 + s206);
                    t388 = (s203 - s205);
                    t389 = (s204 - s206);
                    b130 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                    b131 = (b130 + a625);
                    P1[(b131 + 2)] = (t381 + t385);
                    P1[(b131 + 3)] = (t382 + t387);
                    b132 = (b130 - a625);
                    P1[(b132 + 78)] = (t381 - t385);
                    P1[(b132 + 79)] = (t387 - t382);
                    P1[(b131 + 42)] = (t383 + t389);
                    P1[(b131 + 43)] = (t384 - t388);
                    P1[(b132 + 38)] = (t383 - t389);
                    P1[(b132 + 39)] = -((t384 + t388));
                }
            }
            if (((threadIdx.y == 2))) {
                double a679, a680, s213, s214;
                int b149;
                a679 = (0.70710678118654757*T7[((((42 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
                a680 = (0.70710678118654757*T7[((((86 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))]);
                s213 = (a679 - a680);
                s214 = (a679 + a680);
                b149 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                P1[(b149 + 20)] = (T7[((((20 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] + s213);
                P1[(b149 + 21)] = -((T7[((((64 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] + s214));
                P1[(b149 + 60)] = (T7[((((20 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] - s213);
                P1[(b149 + 61)] = (T7[((((64 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (3097600*blockIdx.z))] - s214);
            }
        }
    }
    __syncthreads();
}

__global__ void ker_code1() {
    if( threadIdx.y <= 3 ) {
        if( threadIdx.x <= 3 ) {
            double a953, a954, a955, a956, a957, a958, a959, a960, 
                    s289, s290, s291, s292, s293, s294, s295, s296, 
                    s297, s298, s299, s300, s301, s302, s303, s304, 
                    s305, s306, t446, t447, t448, t449, t450, t451, 
                    t452, t453, t454, t455, t456, t457, t458, t459, 
                    t460, t461;
            int a950, a951, a952;
            a950 = ((524800*blockIdx.y) + (2*blockIdx.x) + (6560*threadIdx.y) + (26240*threadIdx.x) + (820*blockIdx.z) + (82*threadIdx.z));
            s289 = P1[a950];
            s290 = P1[(a950 + 1)];
            s291 = P1[(a950 + 104960)];
            s292 = P1[(a950 + 104961)];
            s293 = P1[(a950 + 419840)];
            s294 = P1[(a950 + 419841)];
            t446 = (s291 + s293);
            t447 = (s292 + s294);
            t448 = (s291 - s293);
            t449 = (s292 - s294);
            s295 = P1[(a950 + 314880)];
            s296 = P1[(a950 + 314881)];
            s297 = P1[(a950 + 209920)];
            s298 = P1[(a950 + 209921)];
            t450 = (s295 + s297);
            t451 = (s296 + s298);
            t452 = (s295 - s297);
            t453 = (s296 - s298);
            s299 = (((0.3090169943749474*t446) - (0.80901699437494745*t450)) + s289);
            s300 = (((0.3090169943749474*t447) - (0.80901699437494745*t451)) + s290);
            s301 = (((0.3090169943749474*t450) - (0.80901699437494745*t446)) + s289);
            s302 = (((0.3090169943749474*t451) - (0.80901699437494745*t447)) + s290);
            s303 = ((0.95105651629515353*t449) - (0.58778525229247314*t453));
            s304 = ((0.58778525229247314*t452) - (0.95105651629515353*t448));
            s305 = ((0.58778525229247314*t449) + (0.95105651629515353*t453));
            s306 = ((0.58778525229247314*t448) + (0.95105651629515353*t452));
            a951 = ((40*threadIdx.y) + (10*threadIdx.x));
            T57[((((a951 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = (t446 + t450 + s289);
            T57[(((((a951 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = (t447 + t451 + s290);
            t454 = (s299 + s303);
            t455 = (s300 + s304);
            t456 = (s299 - s303);
            t457 = (s300 - s304);
            a952 = (8*threadIdx.x);
            a953 = D37[a952];
            a954 = D37[(a952 + 1)];
            a955 = D37[(a952 + 2)];
            a956 = D37[(a952 + 3)];
            T57[(((((a951 + 2) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a953*t454) - (a954*t455));
            T57[(((((a951 + 3) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a954*t454) + (a953*t455));
            T57[(((((a951 + 8) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a955*t456) - (a956*t457));
            T57[(((((a951 + 9) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a956*t456) + (a955*t457));
            t458 = (s301 + s305);
            t459 = (s302 - s306);
            t460 = (s301 - s305);
            t461 = (s302 + s306);
            a957 = D37[(a952 + 4)];
            a958 = D37[(a952 + 5)];
            a959 = D37[(a952 + 6)];
            a960 = D37[(a952 + 7)];
            T57[(((((a951 + 4) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a957*t458) - (a958*t459));
            T57[(((((a951 + 5) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a958*t458) + (a957*t459));
            T57[(((((a951 + 6) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a959*t460) - (a960*t461));
            T57[(((((a951 + 7) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a960*t460) + (a959*t461));
        }
    }
    __syncthreads();
    if( threadIdx.y <= 3 ) {
        double a1160, a1161, a1162, a1163, a1164, a1165, a1166, a1167, 
                s347, s348, s349, s350, s351, s352, s353, s354, 
                t510, t511, t512, t513, t514, t515, t516, t517, 
                t518, t519, t520, t521, t522, t523, t524, t525;
        int a1150, a1151, a1152, a1153, a1154, a1155, a1156, a1157, 
                a1158, a1159;
        a1150 = (40*threadIdx.y);
        a1151 = (a1150 + (2*threadIdx.x));
        s347 = T57[((((a1151 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1152 = (a1151 + 1);
        s348 = T57[((((a1152 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1153 = (a1151 + 20);
        s349 = T57[((((a1153 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1154 = (a1151 + 21);
        s350 = T57[((((a1154 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t510 = (s347 + s349);
        t511 = (s348 + s350);
        t512 = (s347 - s349);
        t513 = (s348 - s350);
        a1155 = (a1151 + 10);
        s351 = T57[((((a1155 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1156 = (a1151 + 11);
        s352 = T57[((((a1156 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1157 = (a1151 + 30);
        s353 = T57[((((a1157 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1158 = (a1151 + 31);
        s354 = T57[((((a1158 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t514 = (s351 + s353);
        t515 = (s352 + s354);
        t516 = (s351 - s353);
        t517 = (s352 - s354);
        t518 = (t510 + t514);
        t519 = (t511 + t515);
        t520 = (t510 - t514);
        t521 = (t511 - t515);
        a1159 = (a1150 + (8*threadIdx.x));
        a1160 = D35[a1159];
        a1161 = D35[(a1159 + 1)];
        a1162 = D35[(a1159 + 2)];
        a1163 = D35[(a1159 + 3)];
        T56[((((a1151 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1160*t518) - (a1161*t519));
        T56[((((a1152 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1161*t518) + (a1160*t519));
        T56[((((a1153 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1162*t520) - (a1163*t521));
        T56[((((a1154 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1163*t520) + (a1162*t521));
        t522 = (t512 + t517);
        t523 = (t513 - t516);
        t524 = (t512 - t517);
        t525 = (t513 + t516);
        a1164 = D35[(a1159 + 4)];
        a1165 = D35[(a1159 + 5)];
        a1166 = D35[(a1159 + 6)];
        a1167 = D35[(a1159 + 7)];
        T56[((((a1155 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1164*t522) - (a1165*t523));
        T56[((((a1156 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1165*t522) + (a1164*t523));
        T56[((((a1157 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1166*t524) - (a1167*t525));
        T56[((((a1158 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1167*t524) + (a1166*t525));
    }
    __syncthreads();
    if( threadIdx.x <= 0 ) {
        double s379, s380, s381, s382, s383, s384, s385, s387, 
                t566, t567, t568, t569, t570, t571, t572, t573;
        int a1254, a1255;
        a1254 = (2*threadIdx.y);
        s379 = T56[((((a1254 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s380 = T56[(((((a1254 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s381 = T56[(((((a1254 + 80) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s382 = T56[(((((a1254 + 81) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t566 = (s379 + s381);
        t567 = (s380 + s382);
        t568 = (s379 - s381);
        t569 = (s380 - s382);
        s383 = T56[(((((a1254 + 40) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s384 = T56[(((((a1254 + 41) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s385 = T56[(((((a1254 + 120) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s387 = T56[(((((a1254 + 121) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t570 = (s383 + s385);
        t571 = (s384 + s387);
        t572 = (s383 - s385);
        t573 = (s384 - s387);
        a1255 = ((524800*blockIdx.y) + (12800*blockIdx.x) + (160*threadIdx.y) + (20*blockIdx.z) + (2*threadIdx.z));
        P2[a1255] = (t566 + t570);
        P2[(a1255 + 1)] = (t567 + t571);
        P2[(a1255 + 6400)] = (t566 - t570);
        P2[(a1255 + 6401)] = (t567 - t571);
        P2[(a1255 + 3200)] = (t568 + t573);
        P2[(a1255 + 3201)] = (t569 - t572);
        P2[(a1255 + 9600)] = (t568 - t573);
        P2[(a1255 + 9601)] = (t569 + t572);
    }
    __syncthreads();
}

__global__ void ker_code2() {
    if( threadIdx.y <= 3 ) {
        if( threadIdx.x <= 3 ) {
            double a1527, a1528, a1529, a1530, a1531, a1532, a1533, a1534, 
                    s462, s463, s464, s465, s466, s467, s468, s469, 
                    s470, s471, s472, s473, s474, s475, s476, s477, 
                    s478, s479, t622, t623, t624, t625, t626, t627, 
                    t628, t629, t630, t631, t632, t633, t634, t635, 
                    t636, t637;
            int a1524, a1525, a1526;
            a1524 = (8*threadIdx.x);
            a1525 = ((524800*blockIdx.y) + (12800*blockIdx.x) + (2*threadIdx.y) + a1524 + (1600*blockIdx.z) + (160*threadIdx.z));
            s462 = P2[a1525];
            s463 = P2[(a1525 + 1)];
            s464 = P2[(a1525 + 32)];
            s465 = P2[(a1525 + 33)];
            s466 = P2[(a1525 + 128)];
            s467 = P2[(a1525 + 129)];
            t622 = (s464 + s466);
            t623 = (s465 + s467);
            t624 = (s464 - s466);
            t625 = (s465 - s467);
            s468 = P2[(a1525 + 96)];
            s469 = P2[(a1525 + 97)];
            s470 = P2[(a1525 + 64)];
            s471 = P2[(a1525 + 65)];
            t626 = (s468 + s470);
            t627 = (s469 + s471);
            t628 = (s468 - s470);
            t629 = (s469 - s471);
            s472 = (((0.3090169943749474*t622) - (0.80901699437494745*t626)) + s462);
            s473 = (((0.3090169943749474*t623) - (0.80901699437494745*t627)) + s463);
            s474 = (((0.3090169943749474*t626) - (0.80901699437494745*t622)) + s462);
            s475 = (((0.3090169943749474*t627) - (0.80901699437494745*t623)) + s463);
            s476 = ((0.95105651629515353*t625) - (0.58778525229247314*t629));
            s477 = ((0.58778525229247314*t628) - (0.95105651629515353*t624));
            s478 = ((0.58778525229247314*t625) + (0.95105651629515353*t629));
            s479 = ((0.58778525229247314*t624) + (0.95105651629515353*t628));
            a1526 = ((40*threadIdx.y) + (10*threadIdx.x));
            T81[((((a1526 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = (t622 + t626 + s462);
            T81[(((((a1526 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = (t623 + t627 + s463);
            t630 = (s472 + s476);
            t631 = (s473 + s477);
            t632 = (s472 - s476);
            t633 = (s473 - s477);
            a1527 = D37[a1524];
            a1528 = D37[(a1524 + 1)];
            a1529 = D37[(a1524 + 2)];
            a1530 = D37[(a1524 + 3)];
            T81[(((((a1526 + 2) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1527*t630) - (a1528*t631));
            T81[(((((a1526 + 3) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1528*t630) + (a1527*t631));
            T81[(((((a1526 + 8) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1529*t632) - (a1530*t633));
            T81[(((((a1526 + 9) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1530*t632) + (a1529*t633));
            t634 = (s474 + s478);
            t635 = (s475 - s479);
            t636 = (s474 - s478);
            t637 = (s475 + s479);
            a1531 = D37[(a1524 + 4)];
            a1532 = D37[(a1524 + 5)];
            a1533 = D37[(a1524 + 6)];
            a1534 = D37[(a1524 + 7)];
            T81[(((((a1526 + 4) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1531*t634) - (a1532*t635));
            T81[(((((a1526 + 5) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1532*t634) + (a1531*t635));
            T81[(((((a1526 + 6) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1533*t636) - (a1534*t637));
            T81[(((((a1526 + 7) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1534*t636) + (a1533*t637));
        }
    }
    __syncthreads();
    if( threadIdx.y <= 3 ) {
        double a1734, a1735, a1736, a1737, a1738, a1739, a1740, a1741, 
                s520, s521, s522, s523, s524, s525, s526, s527, 
                t686, t687, t688, t689, t690, t691, t692, t693, 
                t694, t695, t696, t697, t698, t699, t700, t701;
        int a1724, a1725, a1726, a1727, a1728, a1729, a1730, a1731, 
                a1732, a1733;
        a1724 = (40*threadIdx.y);
        a1725 = (a1724 + (2*threadIdx.x));
        s520 = T81[((((a1725 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1726 = (a1725 + 1);
        s521 = T81[((((a1726 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1727 = (a1725 + 20);
        s522 = T81[((((a1727 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1728 = (a1725 + 21);
        s523 = T81[((((a1728 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t686 = (s520 + s522);
        t687 = (s521 + s523);
        t688 = (s520 - s522);
        t689 = (s521 - s523);
        a1729 = (a1725 + 10);
        s524 = T81[((((a1729 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1730 = (a1725 + 11);
        s525 = T81[((((a1730 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1731 = (a1725 + 30);
        s526 = T81[((((a1731 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        a1732 = (a1725 + 31);
        s527 = T81[((((a1732 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t690 = (s524 + s526);
        t691 = (s525 + s527);
        t692 = (s524 - s526);
        t693 = (s525 - s527);
        t694 = (t686 + t690);
        t695 = (t687 + t691);
        t696 = (t686 - t690);
        t697 = (t687 - t691);
        a1733 = (a1724 + (8*threadIdx.x));
        a1734 = D35[a1733];
        a1735 = D35[(a1733 + 1)];
        a1736 = D35[(a1733 + 2)];
        a1737 = D35[(a1733 + 3)];
        T80[((((a1725 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1734*t694) - (a1735*t695));
        T80[((((a1726 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1735*t694) + (a1734*t695));
        T80[((((a1727 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1736*t696) - (a1737*t697));
        T80[((((a1728 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1737*t696) + (a1736*t697));
        t698 = (t688 + t693);
        t699 = (t689 - t692);
        t700 = (t688 - t693);
        t701 = (t689 + t692);
        a1738 = D35[(a1733 + 4)];
        a1739 = D35[(a1733 + 5)];
        a1740 = D35[(a1733 + 6)];
        a1741 = D35[(a1733 + 7)];
        T80[((((a1729 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1738*t698) - (a1739*t699));
        T80[((((a1730 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1739*t698) + (a1738*t699));
        T80[((((a1731 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1740*t700) - (a1741*t701));
        T80[((((a1732 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))] = ((a1741*t700) + (a1740*t701));
    }
    __syncthreads();
    if( threadIdx.x <= 0 ) {
        double s552, s553, s554, s555, s556, s557, s558, s559, 
                t742, t743, t744, t745, t746, t747, t748, t749;
        int a1828, a1829;
        a1828 = (2*threadIdx.y);
        s552 = T80[((((a1828 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s553 = T80[(((((a1828 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s554 = T80[(((((a1828 + 80) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s555 = T80[(((((a1828 + 81) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t742 = (s552 + s554);
        t743 = (s553 + s555);
        t744 = (s552 - s554);
        t745 = (s553 - s555);
        s556 = T80[(((((a1828 + 40) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s557 = T80[(((((a1828 + 41) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s558 = T80[(((((a1828 + 120) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        s559 = T80[(((((a1828 + 121) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (721600*blockIdx.z))];
        t746 = (s556 + s558);
        t747 = (s557 + s559);
        t748 = (s556 - s558);
        t749 = (s557 - s559);
        a1829 = ((524800*blockIdx.y) + (2*blockIdx.x) + (82*threadIdx.y) + (65600*blockIdx.z) + (6560*threadIdx.z));
        P1[a1829] = (t742 + t746);
        P1[(a1829 + 1)] = (t743 + t747);
        P1[(a1829 + 3280)] = (t742 - t746);
        P1[(a1829 + 3281)] = (t743 - t747);
        P1[(a1829 + 1640)] = (t744 + t749);
        P1[(a1829 + 1641)] = (t745 - t748);
        P1[(a1829 + 4920)] = (t744 - t749);
        P1[(a1829 + 4921)] = (t745 + t748);
    }
    __syncthreads();
}

__global__ void ker_code3(double  * *sym) {
    if (((threadIdx.y == 0))) {
        double a2693, a2695, a2700, a2701, a2702, a2703, a2704, a2705, 
                a2706, a2707, a2708, a2709, a2710, a2711, a2712, a2713, 
                a2714, a2715, a2716, a2717, a2720, a2721, a2722, a2723, 
                a2724, a2725, a2726, a2727, a2728, a2729, a2730, s658, 
                s659, s660, s661, s662, s663, s664, s665, s666, 
                s667;
        int a2688, a2689, a2690, a2691, a2692, a2694, a2696, a2697, 
                a2698, a2699, a2718, a2719;
        a2688 = (82*blockIdx.z);
        a2689 = (2*threadIdx.z);
        a2690 = ((82*blockIdx.x) + (6560*blockIdx.y) + a2688 + a2689);
        s658 = P1[a2690];
        a2691 = (a2690 + 1);
        s659 = P1[a2691];
        s660 = P1[(a2690 + 2099200)];
        s661 = P1[(a2690 + 2099201)];
        s662 = P1[(a2690 + 2624000)];
        s663 = P1[(a2690 + 2624001)];
        s664 = P1[(a2690 + 3148800)];
        s665 = P1[(a2690 + 3148801)];
        a2692 = (a2688 + a2689);
        a2693 = (80.0*D10[a2692]);
        a2694 = (a2692 + 1);
        a2695 = (80.0*D10[a2694]);
        a2696 = (2*blockIdx.x);
        a2697 = (a2696 + 1);
        a2698 = (2*blockIdx.y);
        a2699 = (a2698 + 1);
        a2700 = (6400.0*D12[a2698]);
        a2701 = D12[a2696];
        a2702 = (6400.0*D12[a2699]);
        a2703 = D12[a2697];
        a2704 = (6400.0*D12[a2698]);
        a2705 = D10[a2692];
        a2706 = (6400.0*D12[a2699]);
        a2707 = D10[a2694];
        a2708 = ((a2704*a2705) - (a2706*a2707));
        a2709 = ((a2704*a2707) + (a2706*a2705));
        a2710 = (6400.0*D12[a2696]);
        a2711 = D10[a2692];
        a2712 = (6400.0*D12[a2697]);
        a2713 = D10[a2694];
        a2714 = ((a2710*a2711) - (a2712*a2713));
        a2715 = ((a2710*a2713) + (a2712*a2711));
        a2716 = (80.0*D10[a2692]);
        a2717 = (80.0*D10[a2694]);
        a2718 = (41*blockIdx.z);
        a2719 = ((41*blockIdx.x) + (3280*blockIdx.y) + a2718 + threadIdx.z);
        a2720 = (sym[3][a2719] / 512000);
        a2721 = (PhysConst_c*PhysConst_c);
        a2722 = sym[4][a2719];
        a2723 = (-(((sym[2][blockIdx.y]*a2721)*a2722)) / 512000);
        a2724 = (((sym[1][blockIdx.x]*a2721)*a2722) / 512000);
        a2725 = (-(((1.0 / PhysConst_ep0)*a2722)) / 512000);
        a2726 = sym[0][(a2718 + threadIdx.z)];
        a2727 = ((a2726*sym[7][a2719]) / 512000);
        a2728 = (-((a2726*sym[6][a2719])) / 512000);
        s666 = ((((((a2720*((a2693*s658) - (a2695*s659))) - (a2723*((a2709*s660) + (a2708*s661)))) - (a2724*((a2715*s662) + (a2714*s663)))) + (a2725*((a2716*s664) - (a2717*s665)))) - (a2727*P1[(a2690 + 4723201)])) - (a2728*P1[(a2690 + 5248001)]));
        s667 = ((a2720*((a2695*s658) + (a2693*s659))) + (a2723*((a2708*s660) - (a2709*s661))) + (a2724*((a2714*s662) - (a2715*s663))) + (a2725*((a2717*s664) + (a2716*s665))) + (a2727*P1[(a2690 + 4723200)]) + (a2728*P1[(a2690 + 5248000)]));
        a2729 = (80.0*D21[a2692]);
        a2730 = (80.0*D21[a2694]);
        P2[a2690] = ((a2729*s666) - (a2730*s667));
        P2[a2691] = ((a2730*s666) + (a2729*s667));
    }
    if (((threadIdx.y == 1))) {
        double a3588, a3590, a3593, a3594, a3595, a3596, a3597, a3598, 
                a3599, a3600, a3601, a3602, a3603, a3604, a3605, a3606, 
                a3607, a3608, a3609, a3610, a3613, a3614, a3615, a3616, 
                a3617, a3618, a3619, a3620, a3621, a3622, a3623, s766, 
                s767, s768, s769, s770, s771, s772, s773, s774, 
                s775;
        int a3580, a3581, a3582, a3583, a3584, a3585, a3586, a3587, 
                a3589, a3591, a3592, a3611, a3612;
        a3580 = (82*blockIdx.z);
        a3581 = (2*threadIdx.z);
        a3582 = ((82*blockIdx.x) + (6560*blockIdx.y) + a3580 + a3581);
        a3583 = (a3582 + 524800);
        s766 = P1[a3583];
        a3584 = (a3582 + 524801);
        s767 = P1[a3584];
        s768 = P1[(a3582 + 1574400)];
        s769 = P1[(a3582 + 1574401)];
        s770 = P1[(a3582 + 2624000)];
        s771 = P1[(a3582 + 2624001)];
        s772 = P1[(a3582 + 3673600)];
        s773 = P1[(a3582 + 3673601)];
        a3585 = (a3580 + a3581);
        a3586 = (a3585 + 1);
        a3587 = (2*blockIdx.x);
        a3588 = (80.0*D12[a3587]);
        a3589 = (a3587 + 1);
        a3590 = (80.0*D12[a3589]);
        a3591 = (2*blockIdx.y);
        a3592 = (a3591 + 1);
        a3593 = (6400.0*D12[a3591]);
        a3594 = D12[a3587];
        a3595 = (6400.0*D12[a3592]);
        a3596 = D12[a3589];
        a3597 = ((a3593*a3594) - (a3595*a3596));
        a3598 = ((a3593*a3596) + (a3595*a3594));
        a3599 = (6400.0*D12[a3591]);
        a3600 = D10[a3585];
        a3601 = (6400.0*D12[a3592]);
        a3602 = D10[a3586];
        a3603 = (6400.0*D12[a3587]);
        a3604 = D10[a3585];
        a3605 = (6400.0*D12[a3589]);
        a3606 = D10[a3586];
        a3607 = ((a3603*a3604) - (a3605*a3606));
        a3608 = ((a3603*a3606) + (a3605*a3604));
        a3609 = (80.0*D12[a3587]);
        a3610 = (80.0*D12[a3589]);
        a3611 = (41*blockIdx.z);
        a3612 = ((41*blockIdx.x) + (3280*blockIdx.y) + a3611 + threadIdx.z);
        a3613 = (sym[3][a3612] / 512000);
        a3614 = (PhysConst_c*PhysConst_c);
        a3615 = sym[4][a3612];
        a3616 = (((sym[2][blockIdx.y]*a3614)*a3615) / 512000);
        a3617 = (-(((sym[0][(a3611 + threadIdx.z)]*a3614)*a3615)) / 512000);
        a3618 = (-(((1.0 / PhysConst_ep0)*a3615)) / 512000);
        a3619 = sym[1][blockIdx.x];
        a3620 = ((a3619*sym[7][a3612]) / 512000);
        a3621 = (-((a3619*sym[6][a3612])) / 512000);
        s774 = ((((((a3613*((a3588*s766) - (a3590*s767))) - (a3616*((a3598*s768) + (a3597*s769)))) - (a3617*((a3608*s770) + (a3607*s771)))) + (a3618*((a3609*s772) - (a3610*s773)))) - (a3620*P1[(a3582 + 4723201)])) - (a3621*P1[(a3582 + 5248001)]));
        s775 = ((a3613*((a3590*s766) + (a3588*s767))) + (a3616*((a3597*s768) - (a3598*s769))) + (a3617*((a3607*s770) - (a3608*s771))) + (a3618*((a3610*s772) + (a3609*s773))) + (a3620*P1[(a3582 + 4723200)]) + (a3621*P1[(a3582 + 5248000)]));
        a3622 = (80.0*D20[a3587]);
        a3623 = (80.0*D20[a3589]);
        P2[a3583] = ((a3622*s774) - (a3623*s775));
        P2[a3584] = ((a3623*s774) + (a3622*s775));
    }
    if (((threadIdx.y == 2))) {
        double a4483, a4485, a4486, a4487, a4488, a4489, a4490, a4491, 
                a4492, a4493, a4494, a4495, a4496, a4497, a4498, a4499, 
                a4500, a4501, a4502, a4503, a4506, a4507, a4508, a4509, 
                a4510, a4511, a4512, a4513, a4514, a4515, a4516, s874, 
                s875, s876, s877, s878, s879, s880, s881, s882, 
                s883;
        int a4473, a4474, a4475, a4476, a4477, a4478, a4479, a4480, 
                a4481, a4482, a4484, a4504, a4505;
        a4473 = (82*blockIdx.z);
        a4474 = (2*threadIdx.z);
        a4475 = ((82*blockIdx.x) + (6560*blockIdx.y) + a4473 + a4474);
        a4476 = (a4475 + 1049600);
        s874 = P1[a4476];
        a4477 = (a4475 + 1049601);
        s875 = P1[a4477];
        s876 = P1[(a4475 + 1574400)];
        s877 = P1[(a4475 + 1574401)];
        s878 = P1[(a4475 + 2099200)];
        s879 = P1[(a4475 + 2099201)];
        s880 = P1[(a4475 + 4198400)];
        s881 = P1[(a4475 + 4198401)];
        a4478 = (a4473 + a4474);
        a4479 = (a4478 + 1);
        a4480 = (2*blockIdx.x);
        a4481 = (a4480 + 1);
        a4482 = (2*blockIdx.y);
        a4483 = (80.0*D12[a4482]);
        a4484 = (a4482 + 1);
        a4485 = (80.0*D12[a4484]);
        a4486 = (6400.0*D12[a4482]);
        a4487 = D12[a4480];
        a4488 = (6400.0*D12[a4484]);
        a4489 = D12[a4481];
        a4490 = ((a4486*a4487) - (a4488*a4489));
        a4491 = ((a4486*a4489) + (a4488*a4487));
        a4492 = (6400.0*D12[a4482]);
        a4493 = D10[a4478];
        a4494 = (6400.0*D12[a4484]);
        a4495 = D10[a4479];
        a4496 = ((a4492*a4493) - (a4494*a4495));
        a4497 = ((a4492*a4495) + (a4494*a4493));
        a4498 = (6400.0*D12[a4480]);
        a4499 = D10[a4478];
        a4500 = (6400.0*D12[a4481]);
        a4501 = D10[a4479];
        a4502 = (80.0*D12[a4482]);
        a4503 = (80.0*D12[a4484]);
        a4504 = (41*blockIdx.z);
        a4505 = ((41*blockIdx.x) + (3280*blockIdx.y) + a4504 + threadIdx.z);
        a4506 = (sym[3][a4505] / 512000);
        a4507 = (PhysConst_c*PhysConst_c);
        a4508 = sym[4][a4505];
        a4509 = (-(((sym[1][blockIdx.x]*a4507)*a4508)) / 512000);
        a4510 = (((sym[0][(a4504 + threadIdx.z)]*a4507)*a4508) / 512000);
        a4511 = (-(((1.0 / PhysConst_ep0)*a4508)) / 512000);
        a4512 = sym[2][blockIdx.y];
        a4513 = ((a4512*sym[7][a4505]) / 512000);
        a4514 = (-((a4512*sym[6][a4505])) / 512000);
        s882 = ((((((a4506*((a4483*s874) - (a4485*s875))) - (a4509*((a4491*s876) + (a4490*s877)))) - (a4510*((a4497*s878) + (a4496*s879)))) + (a4511*((a4502*s880) - (a4503*s881)))) - (a4513*P1[(a4475 + 4723201)])) - (a4514*P1[(a4475 + 5248001)]));
        s883 = ((a4506*((a4485*s874) + (a4483*s875))) + (a4509*((a4490*s876) - (a4491*s877))) + (a4510*((a4496*s878) - (a4497*s879))) + (a4511*((a4503*s880) + (a4502*s881))) + (a4513*P1[(a4475 + 4723200)]) + (a4514*P1[(a4475 + 5248000)]));
        a4515 = (80.0*D20[a4482]);
        a4516 = (80.0*D20[a4484]);
        P2[a4476] = ((a4515*s882) - (a4516*s883));
        P2[a4477] = ((a4516*s882) + (a4515*s883));
    }
    if (((threadIdx.y == 3))) {
        double a5386, a5388, a5390, a5392, a5393, a5394, a5395, a5396, 
                a5397, a5398, a5399, a5400, a5401, a5402, a5403, a5404, 
                a5405, a5406, a5407, a5408, a5409, a5410, a5411, a5413, 
                a5414, a5415, a5416, a5417, a5418, a5419, a5420, a5421, 
                a5422, a5423, a5424, a5425, a5426, s980, s981, s982, 
                s983, s984, s985, s986, s987, s988, s989, s990, 
                s991;
        int a5378, a5379, a5380, a5381, a5382, a5383, a5384, a5385, 
                a5387, a5389, a5391, a5412;
        a5378 = (82*blockIdx.z);
        a5379 = (2*threadIdx.z);
        a5380 = ((82*blockIdx.x) + (6560*blockIdx.y) + a5378 + a5379);
        s980 = P1[(a5380 + 524800)];
        s981 = P1[(a5380 + 524801)];
        s982 = P1[(a5380 + 1049600)];
        s983 = P1[(a5380 + 1049601)];
        a5381 = (a5380 + 1574400);
        s984 = P1[a5381];
        a5382 = (a5380 + 1574401);
        s985 = P1[a5382];
        s986 = P1[(a5380 + 3673600)];
        s987 = P1[(a5380 + 3673601)];
        s988 = P1[(a5380 + 4198400)];
        s989 = P1[(a5380 + 4198401)];
        a5383 = (a5378 + a5379);
        a5384 = (a5383 + 1);
        a5385 = (2*blockIdx.x);
        a5386 = (80.0*D12[a5385]);
        a5387 = (a5385 + 1);
        a5388 = (80.0*D12[a5387]);
        a5389 = (2*blockIdx.y);
        a5390 = (80.0*D12[a5389]);
        a5391 = (a5389 + 1);
        a5392 = (80.0*D12[a5391]);
        a5393 = (6400.0*D12[a5389]);
        a5394 = D12[a5385];
        a5395 = (6400.0*D12[a5391]);
        a5396 = D12[a5387];
        a5397 = ((a5393*a5394) - (a5395*a5396));
        a5398 = ((a5393*a5396) + (a5395*a5394));
        a5399 = (6400.0*D12[a5389]);
        a5400 = D10[a5383];
        a5401 = (6400.0*D12[a5391]);
        a5402 = D10[a5384];
        a5403 = (6400.0*D12[a5385]);
        a5404 = D10[a5383];
        a5405 = (6400.0*D12[a5387]);
        a5406 = D10[a5384];
        a5407 = (80.0*D12[a5385]);
        a5408 = (80.0*D12[a5387]);
        a5409 = (80.0*D12[a5389]);
        a5410 = (80.0*D12[a5391]);
        a5411 = sym[2][blockIdx.y];
        a5412 = ((41*blockIdx.x) + (3280*blockIdx.y) + (41*blockIdx.z) + threadIdx.z);
        a5413 = sym[4][a5412];
        a5414 = ((a5411*a5413) / 512000);
        a5415 = sym[1][blockIdx.x];
        a5416 = (-((a5415*a5413)) / 512000);
        a5417 = (sym[3][a5412] / 512000);
        a5418 = sym[5][a5412];
        a5419 = (-((a5411*a5418)) / 512000);
        a5420 = ((a5415*a5418) / 512000);
        s990 = ((((a5417*((a5397*s984) - (a5398*s985))) - ((a5414*((a5388*s980) + (a5386*s981))) + (a5416*((a5392*s982) + (a5390*s983))))) - (a5419*((a5408*s986) + (a5407*s987)))) - (a5420*((a5410*s988) + (a5409*s989))));
        s991 = ((a5414*((a5386*s980) - (a5388*s981))) + (a5416*((a5390*s982) - (a5392*s983))) + (a5417*((a5398*s984) + (a5397*s985))) + (a5419*((a5407*s986) - (a5408*s987))) + (a5420*((a5409*s988) - (a5410*s989))));
        a5421 = (6400.0*D20[a5389]);
        a5422 = D20[a5385];
        a5423 = (6400.0*D20[a5391]);
        a5424 = D20[a5387];
        a5425 = ((a5421*a5422) - (a5423*a5424));
        a5426 = ((a5421*a5424) + (a5423*a5422));
        P2[a5381] = ((a5425*s990) - (a5426*s991));
        P2[a5382] = ((a5426*s990) + (a5425*s991));
    }
    if (((threadIdx.y == 4))) {
        double a6316, a6318, a6322, a6324, a6325, a6326, a6327, a6328, 
                a6329, a6330, a6331, a6332, a6333, a6334, a6335, a6336, 
                a6337, a6338, a6339, a6340, a6341, a6342, a6343, a6346, 
                a6347, a6348, a6349, a6350, a6351, a6352, a6353, a6354, 
                a6355, a6356, a6357, a6358, a6359, s1088, s1089, s1090, 
                s1091, s1092, s1093, s1094, s1095, s1096, s1097, s1098, 
                s1099;
        int a6310, a6311, a6312, a6313, a6314, a6315, a6317, a6319, 
                a6320, a6321, a6323, a6344, a6345;
        a6310 = (82*blockIdx.z);
        a6311 = (2*threadIdx.z);
        a6312 = ((82*blockIdx.x) + (6560*blockIdx.y) + a6310 + a6311);
        s1088 = P1[a6312];
        s1089 = P1[(a6312 + 1)];
        s1090 = P1[(a6312 + 1049600)];
        s1091 = P1[(a6312 + 1049601)];
        a6313 = (a6312 + 2099200);
        s1092 = P1[a6313];
        a6314 = (a6312 + 2099201);
        s1093 = P1[a6314];
        s1094 = P1[(a6312 + 3148800)];
        s1095 = P1[(a6312 + 3148801)];
        s1096 = P1[(a6312 + 4198400)];
        s1097 = P1[(a6312 + 4198401)];
        a6315 = (a6310 + a6311);
        a6316 = (80.0*D10[a6315]);
        a6317 = (a6315 + 1);
        a6318 = (80.0*D10[a6317]);
        a6319 = (2*blockIdx.x);
        a6320 = (a6319 + 1);
        a6321 = (2*blockIdx.y);
        a6322 = (80.0*D12[a6321]);
        a6323 = (a6321 + 1);
        a6324 = (80.0*D12[a6323]);
        a6325 = (6400.0*D12[a6321]);
        a6326 = D12[a6319];
        a6327 = (6400.0*D12[a6323]);
        a6328 = D12[a6320];
        a6329 = (6400.0*D12[a6321]);
        a6330 = D10[a6315];
        a6331 = (6400.0*D12[a6323]);
        a6332 = D10[a6317];
        a6333 = ((a6329*a6330) - (a6331*a6332));
        a6334 = ((a6329*a6332) + (a6331*a6330));
        a6335 = (6400.0*D12[a6319]);
        a6336 = D10[a6315];
        a6337 = (6400.0*D12[a6320]);
        a6338 = D10[a6317];
        a6339 = (80.0*D10[a6315]);
        a6340 = (80.0*D10[a6317]);
        a6341 = (80.0*D12[a6321]);
        a6342 = (80.0*D12[a6323]);
        a6343 = sym[2][blockIdx.y];
        a6344 = (41*blockIdx.z);
        a6345 = ((41*blockIdx.x) + (3280*blockIdx.y) + a6344 + threadIdx.z);
        a6346 = sym[4][a6345];
        a6347 = (-((a6343*a6346)) / 512000);
        a6348 = sym[0][(a6344 + threadIdx.z)];
        a6349 = ((a6348*a6346) / 512000);
        a6350 = (sym[3][a6345] / 512000);
        a6351 = sym[5][a6345];
        a6352 = ((a6343*a6351) / 512000);
        a6353 = (-((a6348*a6351)) / 512000);
        s1098 = ((((a6350*((a6333*s1092) - (a6334*s1093))) - ((a6347*((a6318*s1088) + (a6316*s1089))) + (a6349*((a6324*s1090) + (a6322*s1091))))) - (a6352*((a6340*s1094) + (a6339*s1095)))) - (a6353*((a6342*s1096) + (a6341*s1097))));
        s1099 = ((a6347*((a6316*s1088) - (a6318*s1089))) + (a6349*((a6322*s1090) - (a6324*s1091))) + (a6350*((a6334*s1092) + (a6333*s1093))) + (a6352*((a6339*s1094) - (a6340*s1095))) + (a6353*((a6341*s1096) - (a6342*s1097))));
        a6354 = (6400.0*D20[a6321]);
        a6355 = D21[a6315];
        a6356 = (6400.0*D20[a6323]);
        a6357 = D21[a6317];
        a6358 = ((a6354*a6355) - (a6356*a6357));
        a6359 = ((a6354*a6357) + (a6356*a6355));
        P2[a6313] = ((a6358*s1098) - (a6359*s1099));
        P2[a6314] = ((a6359*s1098) + (a6358*s1099));
    }
    if (((threadIdx.y == 5))) {
        double a7249, a7251, a7253, a7255, a7258, a7259, a7260, a7261, 
                a7262, a7263, a7264, a7265, a7266, a7267, a7268, a7269, 
                a7270, a7271, a7272, a7273, a7274, a7275, a7276, a7279, 
                a7280, a7281, a7282, a7283, a7284, a7285, a7286, a7287, 
                a7288, a7289, a7290, a7291, a7292, s1196, s1197, s1198, 
                s1199, s1200, s1201, s1202, s1203, s1204, s1205, s1206, 
                s1207;
        int a7243, a7244, a7245, a7246, a7247, a7248, a7250, a7252, 
                a7254, a7256, a7257, a7277, a7278;
        a7243 = (82*blockIdx.z);
        a7244 = (2*threadIdx.z);
        a7245 = ((82*blockIdx.x) + (6560*blockIdx.y) + a7243 + a7244);
        s1196 = P1[a7245];
        s1197 = P1[(a7245 + 1)];
        s1198 = P1[(a7245 + 524800)];
        s1199 = P1[(a7245 + 524801)];
        a7246 = (a7245 + 2624000);
        s1200 = P1[a7246];
        a7247 = (a7245 + 2624001);
        s1201 = P1[a7247];
        s1202 = P1[(a7245 + 3148800)];
        s1203 = P1[(a7245 + 3148801)];
        s1204 = P1[(a7245 + 3673600)];
        s1205 = P1[(a7245 + 3673601)];
        a7248 = (a7243 + a7244);
        a7249 = (80.0*D10[a7248]);
        a7250 = (a7248 + 1);
        a7251 = (80.0*D10[a7250]);
        a7252 = (2*blockIdx.x);
        a7253 = (80.0*D12[a7252]);
        a7254 = (a7252 + 1);
        a7255 = (80.0*D12[a7254]);
        a7256 = (2*blockIdx.y);
        a7257 = (a7256 + 1);
        a7258 = (6400.0*D12[a7256]);
        a7259 = D12[a7252];
        a7260 = (6400.0*D12[a7257]);
        a7261 = D12[a7254];
        a7262 = (6400.0*D12[a7256]);
        a7263 = D10[a7248];
        a7264 = (6400.0*D12[a7257]);
        a7265 = D10[a7250];
        a7266 = (6400.0*D12[a7252]);
        a7267 = D10[a7248];
        a7268 = (6400.0*D12[a7254]);
        a7269 = D10[a7250];
        a7270 = ((a7266*a7267) - (a7268*a7269));
        a7271 = ((a7266*a7269) + (a7268*a7267));
        a7272 = (80.0*D10[a7248]);
        a7273 = (80.0*D10[a7250]);
        a7274 = (80.0*D12[a7252]);
        a7275 = (80.0*D12[a7254]);
        a7276 = sym[1][blockIdx.x];
        a7277 = (41*blockIdx.z);
        a7278 = ((41*blockIdx.x) + (3280*blockIdx.y) + a7277 + threadIdx.z);
        a7279 = sym[4][a7278];
        a7280 = ((a7276*a7279) / 512000);
        a7281 = sym[0][(a7277 + threadIdx.z)];
        a7282 = (-((a7281*a7279)) / 512000);
        a7283 = (sym[3][a7278] / 512000);
        a7284 = sym[5][a7278];
        a7285 = (-((a7276*a7284)) / 512000);
        a7286 = ((a7281*a7284) / 512000);
        s1206 = ((((a7283*((a7270*s1200) - (a7271*s1201))) - ((a7280*((a7251*s1196) + (a7249*s1197))) + (a7282*((a7255*s1198) + (a7253*s1199))))) - (a7285*((a7273*s1202) + (a7272*s1203)))) - (a7286*((a7275*s1204) + (a7274*s1205))));
        s1207 = ((a7280*((a7249*s1196) - (a7251*s1197))) + (a7282*((a7253*s1198) - (a7255*s1199))) + (a7283*((a7271*s1200) + (a7270*s1201))) + (a7285*((a7272*s1202) - (a7273*s1203))) + (a7286*((a7274*s1204) - (a7275*s1205))));
        a7287 = (6400.0*D20[a7252]);
        a7288 = D21[a7248];
        a7289 = (6400.0*D20[a7254]);
        a7290 = D21[a7250];
        a7291 = ((a7287*a7288) - (a7289*a7290));
        a7292 = ((a7287*a7290) + (a7289*a7288));
        P2[a7246] = ((a7291*s1206) - (a7292*s1207));
        P2[a7247] = ((a7292*s1206) + (a7291*s1207));
    }
}

__global__ void ker_code4() {
    if( threadIdx.y <= 3 ) {
        if( threadIdx.x <= 3 ) {
            double a7565, a7566, a7567, a7568, a7569, a7570, a7571, a7572, 
                    s1282, s1283, s1284, s1285, s1286, s1287, s1288, s1289, 
                    s1290, s1291, s1292, s1293, s1294, s1295, s1296, s1297, 
                    s1298, s1299, t798, t799, t800, t801, t802, t803, 
                    t804, t805, t806, t807, t808, t809, t810, t811, 
                    t812, t813;
            int a7562, a7563, a7564;
            a7562 = ((524800*blockIdx.y) + (2*blockIdx.x) + (82*threadIdx.y) + (328*threadIdx.x) + (65600*blockIdx.z) + (6560*threadIdx.z));
            s1282 = P2[a7562];
            s1283 = P2[(a7562 + 1)];
            s1284 = P2[(a7562 + 1312)];
            s1285 = P2[(a7562 + 1313)];
            s1286 = P2[(a7562 + 5248)];
            s1287 = P2[(a7562 + 5249)];
            t798 = (s1284 + s1286);
            t799 = (s1285 + s1287);
            t800 = (s1284 - s1286);
            t801 = (s1285 - s1287);
            s1288 = P2[(a7562 + 3936)];
            s1289 = P2[(a7562 + 3937)];
            s1290 = P2[(a7562 + 2624)];
            s1291 = P2[(a7562 + 2625)];
            t802 = (s1288 + s1290);
            t803 = (s1289 + s1291);
            t804 = (s1288 - s1290);
            t805 = (s1289 - s1291);
            s1292 = (((0.3090169943749474*t798) - (0.80901699437494745*t802)) + s1282);
            s1293 = (((0.3090169943749474*t799) - (0.80901699437494745*t803)) + s1283);
            s1294 = (((0.3090169943749474*t802) - (0.80901699437494745*t798)) + s1282);
            s1295 = (((0.3090169943749474*t803) - (0.80901699437494745*t799)) + s1283);
            s1296 = ((0.95105651629515353*t801) - (0.58778525229247314*t805));
            s1297 = ((0.58778525229247314*t804) - (0.95105651629515353*t800));
            s1298 = ((0.58778525229247314*t801) + (0.95105651629515353*t805));
            s1299 = ((0.58778525229247314*t800) + (0.95105651629515353*t804));
            a7563 = ((40*threadIdx.y) + (10*threadIdx.x));
            T129[((((a7563 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = (t798 + t802 + s1282);
            T129[(((((a7563 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = (t799 + t803 + s1283);
            t806 = (s1292 + s1296);
            t807 = (s1293 + s1297);
            t808 = (s1292 - s1296);
            t809 = (s1293 - s1297);
            a7564 = (8*threadIdx.x);
            a7565 = D37[a7564];
            a7566 = D37[(a7564 + 1)];
            a7567 = D37[(a7564 + 2)];
            a7568 = D37[(a7564 + 3)];
            T129[(((((a7563 + 2) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7565*t806) - (a7566*t807));
            T129[(((((a7563 + 3) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7566*t806) + (a7565*t807));
            T129[(((((a7563 + 8) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7567*t808) - (a7568*t809));
            T129[(((((a7563 + 9) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7568*t808) + (a7567*t809));
            t810 = (s1294 + s1298);
            t811 = (s1295 - s1299);
            t812 = (s1294 - s1298);
            t813 = (s1295 + s1299);
            a7569 = D37[(a7564 + 4)];
            a7570 = D37[(a7564 + 5)];
            a7571 = D37[(a7564 + 6)];
            a7572 = D37[(a7564 + 7)];
            T129[(((((a7563 + 4) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7569*t810) - (a7570*t811));
            T129[(((((a7563 + 5) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7570*t810) + (a7569*t811));
            T129[(((((a7563 + 6) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7571*t812) - (a7572*t813));
            T129[(((((a7563 + 7) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7572*t812) + (a7571*t813));
        }
    }
    __syncthreads();
    if( threadIdx.y <= 3 ) {
        double a7772, a7773, a7774, a7775, a7776, a7777, a7778, a7779, 
                s1340, s1341, s1342, s1343, s1344, s1345, s1346, s1347, 
                t862, t863, t864, t865, t866, t867, t868, t869, 
                t870, t871, t872, t873, t874, t875, t876, t877;
        int a7762, a7763, a7764, a7765, a7766, a7767, a7768, a7769, 
                a7770, a7771;
        a7762 = (40*threadIdx.y);
        a7763 = (a7762 + (2*threadIdx.x));
        s1340 = T129[((((a7763 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7764 = (a7763 + 1);
        s1341 = T129[((((a7764 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7765 = (a7763 + 20);
        s1342 = T129[((((a7765 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7766 = (a7763 + 21);
        s1343 = T129[((((a7766 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t862 = (s1340 + s1342);
        t863 = (s1341 + s1343);
        t864 = (s1340 - s1342);
        t865 = (s1341 - s1343);
        a7767 = (a7763 + 10);
        s1344 = T129[((((a7767 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7768 = (a7763 + 11);
        s1345 = T129[((((a7768 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7769 = (a7763 + 30);
        s1346 = T129[((((a7769 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a7770 = (a7763 + 31);
        s1347 = T129[((((a7770 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t866 = (s1344 + s1346);
        t867 = (s1345 + s1347);
        t868 = (s1344 - s1346);
        t869 = (s1345 - s1347);
        t870 = (t862 + t866);
        t871 = (t863 + t867);
        t872 = (t862 - t866);
        t873 = (t863 - t867);
        a7771 = (a7762 + (8*threadIdx.x));
        a7772 = D35[a7771];
        a7773 = D35[(a7771 + 1)];
        a7774 = D35[(a7771 + 2)];
        a7775 = D35[(a7771 + 3)];
        T128[((((a7763 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7772*t870) - (a7773*t871));
        T128[((((a7764 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7773*t870) + (a7772*t871));
        T128[((((a7765 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7774*t872) - (a7775*t873));
        T128[((((a7766 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7775*t872) + (a7774*t873));
        t874 = (t864 + t869);
        t875 = (t865 - t868);
        t876 = (t864 - t869);
        t877 = (t865 + t868);
        a7776 = D35[(a7771 + 4)];
        a7777 = D35[(a7771 + 5)];
        a7778 = D35[(a7771 + 6)];
        a7779 = D35[(a7771 + 7)];
        T128[((((a7767 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7776*t874) - (a7777*t875));
        T128[((((a7768 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7777*t874) + (a7776*t875));
        T128[((((a7769 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7778*t876) - (a7779*t877));
        T128[((((a7770 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a7779*t876) + (a7778*t877));
    }
    __syncthreads();
    if( threadIdx.x <= 0 ) {
        double s1372, s1373, s1374, s1375, s1376, s1377, s1378, s1379, 
                t918, t919, t920, t921, t922, t923, t924, t925;
        int a7865, a7866;
        a7865 = (2*threadIdx.y);
        s1372 = T128[((((a7865 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1373 = T128[(((((a7865 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1374 = T128[(((((a7865 + 80) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1375 = T128[(((((a7865 + 81) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t918 = (s1372 + s1374);
        t919 = (s1373 + s1375);
        t920 = (s1372 - s1374);
        t921 = (s1373 - s1375);
        s1376 = T128[(((((a7865 + 40) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1377 = T128[(((((a7865 + 41) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1378 = T128[(((((a7865 + 120) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1379 = T128[(((((a7865 + 121) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t922 = (s1376 + s1378);
        t923 = (s1377 + s1379);
        t924 = (s1376 - s1378);
        t925 = (s1377 - s1379);
        a7866 = ((524800*blockIdx.y) + (12800*blockIdx.x) + a7865 + (1600*blockIdx.z) + (160*threadIdx.z));
        P1[a7866] = (t918 + t922);
        P1[(a7866 + 1)] = (t919 + t923);
        P1[(a7866 + 80)] = (t918 - t922);
        P1[(a7866 + 81)] = (t919 - t923);
        P1[(a7866 + 40)] = (t920 + t925);
        P1[(a7866 + 41)] = (t921 - t924);
        P1[(a7866 + 120)] = (t920 - t925);
        P1[(a7866 + 121)] = (t921 + t924);
    }
    __syncthreads();
}

__global__ void ker_code5() {
    if( threadIdx.y <= 3 ) {
        if( threadIdx.x <= 3 ) {
            double a8139, a8140, a8141, a8142, a8143, a8144, a8145, a8146, 
                    s1454, s1455, s1456, s1457, s1458, s1459, s1460, s1461, 
                    s1462, s1463, s1464, s1465, s1466, s1467, s1468, s1469, 
                    s1470, s1471, t974, t975, t976, t977, t978, t979, 
                    t980, t981, t982, t983, t984, t985, t986, t987, 
                    t988, t989;
            int a8136, a8137, a8138;
            a8136 = ((524800*blockIdx.y) + (12800*blockIdx.x) + (160*threadIdx.y) + (640*threadIdx.x) + (20*blockIdx.z) + (2*threadIdx.z));
            s1454 = P1[a8136];
            s1455 = P1[(a8136 + 1)];
            s1456 = P1[(a8136 + 2560)];
            s1457 = P1[(a8136 + 2561)];
            s1458 = P1[(a8136 + 10240)];
            s1459 = P1[(a8136 + 10241)];
            t974 = (s1456 + s1458);
            t975 = (s1457 + s1459);
            t976 = (s1456 - s1458);
            t977 = (s1457 - s1459);
            s1460 = P1[(a8136 + 7680)];
            s1461 = P1[(a8136 + 7681)];
            s1462 = P1[(a8136 + 5120)];
            s1463 = P1[(a8136 + 5121)];
            t978 = (s1460 + s1462);
            t979 = (s1461 + s1463);
            t980 = (s1460 - s1462);
            t981 = (s1461 - s1463);
            s1464 = (((0.3090169943749474*t974) - (0.80901699437494745*t978)) + s1454);
            s1465 = (((0.3090169943749474*t975) - (0.80901699437494745*t979)) + s1455);
            s1466 = (((0.3090169943749474*t978) - (0.80901699437494745*t974)) + s1454);
            s1467 = (((0.3090169943749474*t979) - (0.80901699437494745*t975)) + s1455);
            s1468 = ((0.95105651629515353*t977) - (0.58778525229247314*t981));
            s1469 = ((0.58778525229247314*t980) - (0.95105651629515353*t976));
            s1470 = ((0.58778525229247314*t977) + (0.95105651629515353*t981));
            s1471 = ((0.58778525229247314*t976) + (0.95105651629515353*t980));
            a8137 = ((40*threadIdx.y) + (10*threadIdx.x));
            T153[((((a8137 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = (t974 + t978 + s1454);
            T153[(((((a8137 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = (t975 + t979 + s1455);
            t982 = (s1464 + s1468);
            t983 = (s1465 + s1469);
            t984 = (s1464 - s1468);
            t985 = (s1465 - s1469);
            a8138 = (8*threadIdx.x);
            a8139 = D37[a8138];
            a8140 = D37[(a8138 + 1)];
            a8141 = D37[(a8138 + 2)];
            a8142 = D37[(a8138 + 3)];
            T153[(((((a8137 + 2) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8139*t982) - (a8140*t983));
            T153[(((((a8137 + 3) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8140*t982) + (a8139*t983));
            T153[(((((a8137 + 8) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8141*t984) - (a8142*t985));
            T153[(((((a8137 + 9) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8142*t984) + (a8141*t985));
            t986 = (s1466 + s1470);
            t987 = (s1467 - s1471);
            t988 = (s1466 - s1470);
            t989 = (s1467 + s1471);
            a8143 = D37[(a8138 + 4)];
            a8144 = D37[(a8138 + 5)];
            a8145 = D37[(a8138 + 6)];
            a8146 = D37[(a8138 + 7)];
            T153[(((((a8137 + 4) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8143*t986) - (a8144*t987));
            T153[(((((a8137 + 5) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8144*t986) + (a8143*t987));
            T153[(((((a8137 + 6) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8145*t988) - (a8146*t989));
            T153[(((((a8137 + 7) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8146*t988) + (a8145*t989));
        }
    }
    __syncthreads();
    if( threadIdx.y <= 3 ) {
        double a8346, a8347, a8348, a8349, a8350, a8351, a8352, a8353, 
                s1512, s1513, s1514, s1515, s1516, s1517, s1518, s1519, 
                t1038, t1039, t1040, t1041, t1042, t1043, t1044, t1045, 
                t1046, t1047, t1048, t1049, t1050, t1051, t1052, t1053;
        int a8336, a8337, a8338, a8339, a8340, a8341, a8342, a8343, 
                a8344, a8345;
        a8336 = (40*threadIdx.y);
        a8337 = (a8336 + (2*threadIdx.x));
        s1512 = T153[((((a8337 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8338 = (a8337 + 1);
        s1513 = T153[((((a8338 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8339 = (a8337 + 20);
        s1514 = T153[((((a8339 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8340 = (a8337 + 21);
        s1515 = T153[((((a8340 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t1038 = (s1512 + s1514);
        t1039 = (s1513 + s1515);
        t1040 = (s1512 - s1514);
        t1041 = (s1513 - s1515);
        a8341 = (a8337 + 10);
        s1516 = T153[((((a8341 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8342 = (a8337 + 11);
        s1517 = T153[((((a8342 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8343 = (a8337 + 30);
        s1518 = T153[((((a8343 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        a8344 = (a8337 + 31);
        s1519 = T153[((((a8344 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t1042 = (s1516 + s1518);
        t1043 = (s1517 + s1519);
        t1044 = (s1516 - s1518);
        t1045 = (s1517 - s1519);
        t1046 = (t1038 + t1042);
        t1047 = (t1039 + t1043);
        t1048 = (t1038 - t1042);
        t1049 = (t1039 - t1043);
        a8345 = (a8336 + (8*threadIdx.x));
        a8346 = D35[a8345];
        a8347 = D35[(a8345 + 1)];
        a8348 = D35[(a8345 + 2)];
        a8349 = D35[(a8345 + 3)];
        T152[((((a8337 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8346*t1046) - (a8347*t1047));
        T152[((((a8338 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8347*t1046) + (a8346*t1047));
        T152[((((a8339 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8348*t1048) - (a8349*t1049));
        T152[((((a8340 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8349*t1048) + (a8348*t1049));
        t1050 = (t1040 + t1045);
        t1051 = (t1041 - t1044);
        t1052 = (t1040 - t1045);
        t1053 = (t1041 + t1044);
        a8350 = D35[(a8345 + 4)];
        a8351 = D35[(a8345 + 5)];
        a8352 = D35[(a8345 + 6)];
        a8353 = D35[(a8345 + 7)];
        T152[((((a8341 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8350*t1050) - (a8351*t1051));
        T152[((((a8342 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8351*t1050) + (a8350*t1051));
        T152[((((a8343 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8352*t1052) - (a8353*t1053));
        T152[((((a8344 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))] = ((a8353*t1052) + (a8352*t1053));
    }
    __syncthreads();
    if( threadIdx.x <= 0 ) {
        double s1544, s1545, s1546, s1547, s1548, s1549, s1550, s1551, 
                t1094, t1095, t1096, t1097, t1098, t1099, t1100, t1101;
        int a8440, a8441;
        a8440 = (2*threadIdx.y);
        s1544 = T152[((((a8440 + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1545 = T152[(((((a8440 + 1) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1546 = T152[(((((a8440 + 80) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1547 = T152[(((((a8440 + 81) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t1094 = (s1544 + s1546);
        t1095 = (s1545 + s1547);
        t1096 = (s1544 - s1546);
        t1097 = (s1545 - s1547);
        s1548 = T152[(((((a8440 + 40) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1549 = T152[(((((a8440 + 41) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1550 = T152[(((((a8440 + 120) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        s1551 = T152[(((((a8440 + 121) + (160*threadIdx.z)) + (1600*blockIdx.x)) + (65600*blockIdx.y)) + (393600*blockIdx.z))];
        t1098 = (s1548 + s1550);
        t1099 = (s1549 + s1551);
        t1100 = (s1548 - s1550);
        t1101 = (s1549 - s1551);
        a8441 = ((524800*blockIdx.y) + (2*blockIdx.x) + (6560*threadIdx.y) + (820*blockIdx.z) + (82*threadIdx.z));
        P2[a8441] = (t1094 + t1098);
        P2[(a8441 + 1)] = (t1095 + t1099);
        P2[(a8441 + 262400)] = (t1094 - t1098);
        P2[(a8441 + 262401)] = (t1095 - t1099);
        P2[(a8441 + 131200)] = (t1096 + t1101);
        P2[(a8441 + 131201)] = (t1097 - t1100);
        P2[(a8441 + 393600)] = (t1096 - t1101);
        P2[(a8441 + 393601)] = (t1097 + t1100);
    }
    __syncthreads();
}

__global__ void ker_code6(double  * *Yptr) {
    if( threadIdx.y <= 2 ) {
        if( threadIdx.x <= 0 ) {
            if (((threadIdx.y == 0))) {
                double s1584, s1585, s1586, s1587, s1588, s1589;
                int a8483;
                a8483 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                s1584 = P2[a8483];
                s1585 = P2[(a8483 + 80)];
                s1586 = (s1584 + s1585);
                s1587 = (s1584 - s1585);
                s1588 = (2.0*P2[(a8483 + 40)]);
                s1589 = (2.0*P2[(a8483 + 41)]);
                T177[((((88*threadIdx.z) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (s1586 + s1588);
                T177[((((44 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (s1586 - s1588);
                T177[((((22 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (s1587 + s1589);
                T177[((((66 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (s1587 - s1589);
            }
            if (((threadIdx.y == 1))) {
                for(int i252 = 0; i252 <= 8; i252++) {
                    double a8680, a8681, a8682, a8683, a8684, a8685, a8686, a8687, 
                            s1630, s1631, s1632, s1633, s1634, s1635, s1636, s1637, 
                            t1150, t1151, t1152, t1153, t1154, t1155, t1156, t1157, 
                            t1158, t1159, t1160, t1161, t1162, t1163, t1164, t1165;
                    int a8678, a8679, b1501, b1502, b1503;
                    a8678 = (2*i252);
                    b1501 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                    b1502 = (b1501 + a8678);
                    s1630 = P2[(b1502 + 2)];
                    s1631 = P2[(b1502 + 3)];
                    b1503 = (b1501 - a8678);
                    s1632 = P2[(b1503 + 78)];
                    s1633 = P2[(b1503 + 79)];
                    t1150 = (s1630 + s1632);
                    t1151 = (s1631 - s1633);
                    t1152 = (s1630 - s1632);
                    t1153 = (s1631 + s1633);
                    s1634 = P2[(b1502 + 42)];
                    s1635 = P2[(b1502 + 43)];
                    s1636 = P2[(b1503 + 38)];
                    s1637 = P2[(b1503 + 39)];
                    t1154 = (s1634 + s1636);
                    t1155 = (s1635 - s1637);
                    t1156 = (s1634 - s1636);
                    t1157 = (s1635 + s1637);
                    t1158 = (t1150 + t1154);
                    t1159 = (t1151 + t1155);
                    t1160 = (t1150 - t1154);
                    t1161 = (t1151 - t1155);
                    a8679 = (8*i252);
                    a8680 = D38[a8679];
                    a8681 = D38[(a8679 + 1)];
                    a8682 = D38[(a8679 + 2)];
                    a8683 = D38[(a8679 + 3)];
                    T177[(((((a8678 + 2) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8680*t1158) - (a8681*t1159));
                    T177[(((((a8678 + 3) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8681*t1158) + (a8680*t1159));
                    T177[(((((a8678 + 46) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8682*t1160) - (a8683*t1161));
                    T177[(((((a8678 + 47) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8683*t1160) + (a8682*t1161));
                    t1162 = (t1152 + t1157);
                    t1163 = (t1153 - t1156);
                    t1164 = (t1152 - t1157);
                    t1165 = (t1153 + t1156);
                    a8684 = D38[(a8679 + 4)];
                    a8685 = D38[(a8679 + 5)];
                    a8686 = D38[(a8679 + 6)];
                    a8687 = D38[(a8679 + 7)];
                    T177[(((((a8678 + 24) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8684*t1162) - (a8685*t1163));
                    T177[(((((a8678 + 25) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8685*t1162) + (a8684*t1163));
                    T177[(((((a8678 + 68) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8686*t1164) - (a8687*t1165));
                    T177[(((((a8678 + 69) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = ((a8687*t1164) + (a8686*t1165));
                }
            }
            if (((threadIdx.y == 2))) {
                double a8724, a8725, s1662, s1663, s1664, s1665;
                int b1520;
                b1520 = ((524800*blockIdx.y) + (6560*blockIdx.x) + (3280*blockIdx.z) + (82*threadIdx.z));
                s1662 = P2[(b1520 + 20)];
                s1663 = P2[(b1520 + 21)];
                s1664 = P2[(b1520 + 60)];
                s1665 = P2[(b1520 + 61)];
                a8724 = (0.70710678118654757*(s1662 - s1664));
                a8725 = (0.70710678118654757*(s1663 + s1665));
                T177[((((20 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (2.0*(s1662 + s1664));
                T177[((((64 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (2.0*(s1663 - s1665));
                T177[((((42 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (2.0*(a8724 + a8725));
                T177[((((86 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))] = (2.0*(a8725 - a8724));
            }
        }
    }
    __syncthreads();
    if( threadIdx.x <= 1 ) {
        if (((threadIdx.x == 0))) {
            double s1698, s1699, s1700, s1701, s1702, s1703;
            int a8756, a8757;
            a8756 = (22*threadIdx.y);
            s1698 = T177[((((a8756 + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
            s1699 = T177[(((((a8756 + 20) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
            s1700 = (s1698 + s1699);
            s1701 = (s1698 - s1699);
            s1702 = (2.0*T177[(((((a8756 + 10) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))]);
            s1703 = (2.0*T177[(((((a8756 + 11) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))]);
            a8757 = (24*threadIdx.y);
            T176[((((a8757 + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = (s1700 + s1702);
            T176[(((((a8757 + 12) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = (s1700 - s1702);
            T176[(((((a8757 + 6) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = (s1701 + s1703);
            T176[(((((a8757 + 18) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = (s1701 - s1703);
        } else {
            /* skip */
            for(int i2186 = 0; i2186 <= 23; i2186++) {
                T176[((((((24*threadIdx.y) + i2186) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = T207[((((((i2186 + (24*threadIdx.x)) + (48*threadIdx.y)) + (192*threadIdx.z)) + (7680*blockIdx.x)) + (614400*blockIdx.y)) + (3686400*blockIdx.z))];
            }
        }
        if (((threadIdx.x == 1))) {
            for(int i258 = 0; i258 <= 1; i258++) {
                double a8938, a8939, a8940, a8941, a8942, a8943, a8944, a8945, 
                        s1744, s1745, s1746, s1747, s1748, s1749, s1750, s1751, 
                        t1222, t1223, t1224, t1225, t1226, t1227, t1228, t1229, 
                        t1230, t1231, t1232, t1233, t1234, t1235, t1236, t1237;
                int a8935, a8936, a8937, b1543, b1544, b1545;
                a8935 = (22*threadIdx.y);
                a8936 = (2*i258);
                b1543 = (a8935 + a8936);
                s1744 = T177[(((((b1543 + 2) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                s1745 = T177[(((((b1543 + 3) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                b1544 = (a8935 - a8936);
                s1746 = T177[(((((b1544 + 18) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                s1747 = T177[(((((b1544 + 19) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                t1222 = (s1744 + s1746);
                t1223 = (s1745 - s1747);
                t1224 = (s1744 - s1746);
                t1225 = (s1745 + s1747);
                s1748 = T177[(((((b1543 + 12) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                s1749 = T177[(((((b1543 + 13) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                s1750 = T177[(((((b1544 + 8) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                s1751 = T177[(((((b1544 + 9) + (88*threadIdx.z)) + (3520*blockIdx.x)) + (281600*blockIdx.y)) + (1689600*blockIdx.z))];
                t1226 = (s1748 + s1750);
                t1227 = (s1749 - s1751);
                t1228 = (s1748 - s1750);
                t1229 = (s1749 + s1751);
                t1230 = (t1222 + t1226);
                t1231 = (t1223 + t1227);
                t1232 = (t1222 - t1226);
                t1233 = (t1223 - t1227);
                a8937 = (8*i258);
                a8938 = D39[a8937];
                a8939 = D39[(a8937 + 1)];
                a8940 = D39[(a8937 + 2)];
                a8941 = D39[(a8937 + 3)];
                b1545 = ((24*threadIdx.y) + a8936);
                T176[(((((b1545 + 2) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8938*t1230) - (a8939*t1231));
                T176[(((((b1545 + 3) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8939*t1230) + (a8938*t1231));
                T176[(((((b1545 + 14) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8940*t1232) - (a8941*t1233));
                T176[(((((b1545 + 15) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8941*t1232) + (a8940*t1233));
                t1234 = (t1224 + t1229);
                t1235 = (t1225 - t1228);
                t1236 = (t1224 - t1229);
                t1237 = (t1225 + t1228);
                a8942 = D39[(a8937 + 4)];
                a8943 = D39[(a8937 + 5)];
                a8944 = D39[(a8937 + 6)];
                a8945 = D39[(a8937 + 7)];
                T176[(((((b1545 + 8) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8942*t1234) - (a8943*t1235));
                T176[(((((b1545 + 9) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8943*t1234) + (a8942*t1235));
                T176[(((((b1545 + 20) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8944*t1236) - (a8945*t1237));
                T176[(((((b1545 + 21) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = ((a8945*t1236) + (a8944*t1237));
            }
        } else {
            /* skip */
            for(int i2232 = 0; i2232 <= 23; i2232++) {
                T176[((((((24*threadIdx.y) + i2232) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))] = T216[((((((i2232 + (24*threadIdx.x)) + (48*threadIdx.y)) + (192*threadIdx.z)) + (7680*blockIdx.x)) + (614400*blockIdx.y)) + (3686400*blockIdx.z))];
            }
        }
    }
    __syncthreads();
    double s1782, s1783, s1784, s1785, s1786, s1787, s1788, s1789, 
            s1790;
    int a9104, a9106, a9107, a9108;
    double  *a9105;
    a9104 = ((24*threadIdx.y) + (6*threadIdx.x));
    s1782 = T176[((((a9104 + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))];
    s1783 = T176[(((((a9104 + 2) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))];
    s1784 = T176[(((((a9104 + 3) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))];
    s1785 = T176[(((((a9104 + 4) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))];
    s1786 = T176[(((((a9104 + 5) + (96*threadIdx.z)) + (3840*blockIdx.x)) + (307200*blockIdx.y)) + (1843200*blockIdx.z))];
    s1787 = (((0.61803398874989479*s1783) - (1.6180339887498949*s1785)) + s1782);
    s1788 = (((0.61803398874989479*s1785) - (1.6180339887498949*s1783)) + s1782);
    s1789 = ((1.9021130325903071*s1784) + (1.1755705045849463*s1786));
    s1790 = ((1.9021130325903071*s1786) - (1.1755705045849463*s1784));
    a9105 = Yptr[blockIdx.y];
    a9106 = (3*blockIdx.y);
    a9107 = D23[(a9106 + 2)];
    a9108 = (threadIdx.y + (4*threadIdx.x) + ((D23[(a9106 + 1)]*a9107)*blockIdx.x) + (40*(a9107*blockIdx.z)) + (a9107*threadIdx.z));
    a9105[a9108] = ((2.0*s1783) + (2.0*s1785) + s1782);
    a9105[(a9108 + 16)] = (s1787 + s1789);
    a9105[(a9108 + 64)] = (s1787 - s1789);
    a9105[(a9108 + 48)] = (s1788 + s1790);
    a9105[(a9108 + 32)] = (s1788 - s1790);
    __syncthreads();
}

void warpx(double  * *Yptr, double  * *Xptr, double  * *sym) {
    dim3 b1591(4, 4, 40), b1592(5, 20, 10), b1593(5, 20, 10), b1594(1, 6, 41), b1595(5, 20, 10), b1596(5, 20, 10), b1597(4, 4, 40), g1(80, 11, 2), 
    g2(41, 11, 8), g3(41, 11, 8), g4(80, 80, 1), g5(41, 6, 8), g6(41, 6, 8), g7(80, 6, 2);
    ker_code0<<<g1, b1591>>>(Xptr);
    ker_code1<<<g2, b1592>>>();
    ker_code2<<<g3, b1593>>>();
    ker_code3<<<g4, b1594>>>(sym);
    ker_code4<<<g5, b1595>>>();
    ker_code5<<<g6, b1596>>>();
    ker_code6<<<g7, b1597>>>(Yptr);
}

void destroy_warpx() {
}
